
caltest1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  000011aa  0000123e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800136  00800136  00001274  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  000012e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001671  00000000  00000000  0000133c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000829  00000000  00000000  000029ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000960  00000000  00000000  000031d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00003b38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e4  00000000  00000000  00003c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000104d  00000000  00000000  00004114  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00005161  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__divsf3_pse+0x4e>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <_Z10Calculatorv+0x174>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <_Z11Keypad_Readv+0x80>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <_Z11LCD_Commandh+0x2e>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	ea ea       	ldi	r30, 0xAA	; 170
     176:	f1 e1       	ldi	r31, 0x11	; 17
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	a6 33       	cpi	r26, 0x36	; 54
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	a6 e3       	ldi	r26, 0x36	; 54
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a6 34       	cpi	r26, 0x46	; 70
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	0e 94 8b 04 	call	0x916	; 0x916 <main>
     198:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <_exit>

0000019c <__bad_interrupt>:
     19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <_Z11LCD_Commandh>:
}

// [LCD_Command, LCD_Data, LCD_Init, LCD_String, LCD_Clear, Keypad_Read remain unchanged...]

void LCD_Command(unsigned char cmnd) {
	PORTC &= ~(1 << LCD_D4 | 1 << LCD_D5 | 1 << LCD_D6 | 1 << LCD_D7);
     1a0:	98 b1       	in	r25, 0x08	; 8
     1a2:	90 7f       	andi	r25, 0xF0	; 240
     1a4:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x10) PORTC |= (1 << LCD_D4);
     1a6:	84 ff       	sbrs	r24, 4
     1a8:	03 c0       	rjmp	.+6      	; 0x1b0 <_Z11LCD_Commandh+0x10>
     1aa:	98 b1       	in	r25, 0x08	; 8
     1ac:	91 60       	ori	r25, 0x01	; 1
     1ae:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x20) PORTC |= (1 << LCD_D5);
     1b0:	85 ff       	sbrs	r24, 5
     1b2:	03 c0       	rjmp	.+6      	; 0x1ba <_Z11LCD_Commandh+0x1a>
     1b4:	98 b1       	in	r25, 0x08	; 8
     1b6:	92 60       	ori	r25, 0x02	; 2
     1b8:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x40) PORTC |= (1 << LCD_D6);
     1ba:	86 ff       	sbrs	r24, 6
     1bc:	03 c0       	rjmp	.+6      	; 0x1c4 <_Z11LCD_Commandh+0x24>
     1be:	98 b1       	in	r25, 0x08	; 8
     1c0:	94 60       	ori	r25, 0x04	; 4
     1c2:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x80) PORTC |= (1 << LCD_D7);
     1c4:	88 23       	and	r24, r24
     1c6:	1c f4       	brge	.+6      	; 0x1ce <_Z11LCD_Commandh+0x2e>
     1c8:	98 b1       	in	r25, 0x08	; 8
     1ca:	98 60       	ori	r25, 0x08	; 8
     1cc:	98 b9       	out	0x08, r25	; 8
	PORTB &= ~(1 << LCD_RS);
     1ce:	95 b1       	in	r25, 0x05	; 5
     1d0:	9b 7f       	andi	r25, 0xFB	; 251
     1d2:	95 b9       	out	0x05, r25	; 5
	PORTB &= ~(1 << LCD_RW);
     1d4:	95 b1       	in	r25, 0x05	; 5
     1d6:	9d 7f       	andi	r25, 0xFD	; 253
     1d8:	95 b9       	out	0x05, r25	; 5
	PORTB |= (1 << LCD_EN);
     1da:	95 b1       	in	r25, 0x05	; 5
     1dc:	91 60       	ori	r25, 0x01	; 1
     1de:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e0:	95 e0       	ldi	r25, 0x05	; 5
     1e2:	9a 95       	dec	r25
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <_Z11LCD_Commandh+0x42>
     1e6:	00 00       	nop
	_delay_us(1);
	PORTB &= ~(1 << LCD_EN);
     1e8:	95 b1       	in	r25, 0x05	; 5
     1ea:	9e 7f       	andi	r25, 0xFE	; 254
     1ec:	95 b9       	out	0x05, r25	; 5
     1ee:	e7 ec       	ldi	r30, 0xC7	; 199
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	31 97       	sbiw	r30, 0x01	; 1
     1f4:	f1 f7       	brne	.-4      	; 0x1f2 <_Z11LCD_Commandh+0x52>
     1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <_Z11LCD_Commandh+0x58>
     1f8:	00 00       	nop
	_delay_us(50);
	PORTC &= ~(1 << LCD_D4 | 1 << LCD_D5 | 1 << LCD_D6 | 1 << LCD_D7);
     1fa:	98 b1       	in	r25, 0x08	; 8
     1fc:	90 7f       	andi	r25, 0xF0	; 240
     1fe:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x01) PORTC |= (1 << LCD_D4);
     200:	80 ff       	sbrs	r24, 0
     202:	03 c0       	rjmp	.+6      	; 0x20a <_Z11LCD_Commandh+0x6a>
     204:	98 b1       	in	r25, 0x08	; 8
     206:	91 60       	ori	r25, 0x01	; 1
     208:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x02) PORTC |= (1 << LCD_D5);
     20a:	81 ff       	sbrs	r24, 1
     20c:	03 c0       	rjmp	.+6      	; 0x214 <_Z11LCD_Commandh+0x74>
     20e:	98 b1       	in	r25, 0x08	; 8
     210:	92 60       	ori	r25, 0x02	; 2
     212:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x04) PORTC |= (1 << LCD_D6);
     214:	82 ff       	sbrs	r24, 2
     216:	03 c0       	rjmp	.+6      	; 0x21e <_Z11LCD_Commandh+0x7e>
     218:	98 b1       	in	r25, 0x08	; 8
     21a:	94 60       	ori	r25, 0x04	; 4
     21c:	98 b9       	out	0x08, r25	; 8
	if (cmnd & 0x08) PORTC |= (1 << LCD_D7);
     21e:	83 ff       	sbrs	r24, 3
     220:	03 c0       	rjmp	.+6      	; 0x228 <_Z11LCD_Commandh+0x88>
     222:	88 b1       	in	r24, 0x08	; 8
     224:	88 60       	ori	r24, 0x08	; 8
     226:	88 b9       	out	0x08, r24	; 8
	PORTB |= (1 << LCD_EN);
     228:	85 b1       	in	r24, 0x05	; 5
     22a:	81 60       	ori	r24, 0x01	; 1
     22c:	85 b9       	out	0x05, r24	; 5
     22e:	f5 e0       	ldi	r31, 0x05	; 5
     230:	fa 95       	dec	r31
     232:	f1 f7       	brne	.-4      	; 0x230 <_Z11LCD_Commandh+0x90>
     234:	00 00       	nop
	_delay_us(1);
	PORTB &= ~(1 << LCD_EN);
     236:	85 b1       	in	r24, 0x05	; 5
     238:	8e 7f       	andi	r24, 0xFE	; 254
     23a:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     23c:	8f e3       	ldi	r24, 0x3F	; 63
     23e:	9f e1       	ldi	r25, 0x1F	; 31
     240:	01 97       	sbiw	r24, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <_Z11LCD_Commandh+0xa0>
     244:	00 c0       	rjmp	.+0      	; 0x246 <_Z11LCD_Commandh+0xa6>
     246:	00 00       	nop
     248:	08 95       	ret

0000024a <_Z8LCD_Datah>:
	_delay_ms(2);
}

void LCD_Data(unsigned char data) {
	PORTC &= ~(1 << LCD_D4 | 1 << LCD_D5 | 1 << LCD_D6 | 1 << LCD_D7);
     24a:	98 b1       	in	r25, 0x08	; 8
     24c:	90 7f       	andi	r25, 0xF0	; 240
     24e:	98 b9       	out	0x08, r25	; 8
	if (data & 0x10) PORTC |= (1 << LCD_D4);
     250:	84 ff       	sbrs	r24, 4
     252:	03 c0       	rjmp	.+6      	; 0x25a <_Z8LCD_Datah+0x10>
     254:	98 b1       	in	r25, 0x08	; 8
     256:	91 60       	ori	r25, 0x01	; 1
     258:	98 b9       	out	0x08, r25	; 8
	if (data & 0x20) PORTC |= (1 << LCD_D5);
     25a:	85 ff       	sbrs	r24, 5
     25c:	03 c0       	rjmp	.+6      	; 0x264 <_Z8LCD_Datah+0x1a>
     25e:	98 b1       	in	r25, 0x08	; 8
     260:	92 60       	ori	r25, 0x02	; 2
     262:	98 b9       	out	0x08, r25	; 8
	if (data & 0x40) PORTC |= (1 << LCD_D6);
     264:	86 ff       	sbrs	r24, 6
     266:	03 c0       	rjmp	.+6      	; 0x26e <_Z8LCD_Datah+0x24>
     268:	98 b1       	in	r25, 0x08	; 8
     26a:	94 60       	ori	r25, 0x04	; 4
     26c:	98 b9       	out	0x08, r25	; 8
	if (data & 0x80) PORTC |= (1 << LCD_D7);
     26e:	88 23       	and	r24, r24
     270:	1c f4       	brge	.+6      	; 0x278 <_Z8LCD_Datah+0x2e>
     272:	98 b1       	in	r25, 0x08	; 8
     274:	98 60       	ori	r25, 0x08	; 8
     276:	98 b9       	out	0x08, r25	; 8
	PORTB |= (1 << LCD_RS);
     278:	95 b1       	in	r25, 0x05	; 5
     27a:	94 60       	ori	r25, 0x04	; 4
     27c:	95 b9       	out	0x05, r25	; 5
	PORTB &= ~(1 << LCD_RW);
     27e:	95 b1       	in	r25, 0x05	; 5
     280:	9d 7f       	andi	r25, 0xFD	; 253
     282:	95 b9       	out	0x05, r25	; 5
	PORTB |= (1 << LCD_EN);
     284:	95 b1       	in	r25, 0x05	; 5
     286:	91 60       	ori	r25, 0x01	; 1
     288:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28a:	95 e0       	ldi	r25, 0x05	; 5
     28c:	9a 95       	dec	r25
     28e:	f1 f7       	brne	.-4      	; 0x28c <_Z8LCD_Datah+0x42>
     290:	00 00       	nop
	_delay_us(1);
	PORTB &= ~(1 << LCD_EN);
     292:	95 b1       	in	r25, 0x05	; 5
     294:	9e 7f       	andi	r25, 0xFE	; 254
     296:	95 b9       	out	0x05, r25	; 5
     298:	e7 ec       	ldi	r30, 0xC7	; 199
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	31 97       	sbiw	r30, 0x01	; 1
     29e:	f1 f7       	brne	.-4      	; 0x29c <_Z8LCD_Datah+0x52>
     2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <_Z8LCD_Datah+0x58>
     2a2:	00 00       	nop
	_delay_us(50);
	PORTC &= ~(1 << LCD_D4 | 1 << LCD_D5 | 1 << LCD_D6 | 1 << LCD_D7);
     2a4:	98 b1       	in	r25, 0x08	; 8
     2a6:	90 7f       	andi	r25, 0xF0	; 240
     2a8:	98 b9       	out	0x08, r25	; 8
	if (data & 0x01) PORTC |= (1 << LCD_D4);
     2aa:	80 ff       	sbrs	r24, 0
     2ac:	03 c0       	rjmp	.+6      	; 0x2b4 <_Z8LCD_Datah+0x6a>
     2ae:	98 b1       	in	r25, 0x08	; 8
     2b0:	91 60       	ori	r25, 0x01	; 1
     2b2:	98 b9       	out	0x08, r25	; 8
	if (data & 0x02) PORTC |= (1 << LCD_D5);
     2b4:	81 ff       	sbrs	r24, 1
     2b6:	03 c0       	rjmp	.+6      	; 0x2be <_Z8LCD_Datah+0x74>
     2b8:	98 b1       	in	r25, 0x08	; 8
     2ba:	92 60       	ori	r25, 0x02	; 2
     2bc:	98 b9       	out	0x08, r25	; 8
	if (data & 0x04) PORTC |= (1 << LCD_D6);
     2be:	82 ff       	sbrs	r24, 2
     2c0:	03 c0       	rjmp	.+6      	; 0x2c8 <_Z8LCD_Datah+0x7e>
     2c2:	98 b1       	in	r25, 0x08	; 8
     2c4:	94 60       	ori	r25, 0x04	; 4
     2c6:	98 b9       	out	0x08, r25	; 8
	if (data & 0x08) PORTC |= (1 << LCD_D7);
     2c8:	83 ff       	sbrs	r24, 3
     2ca:	03 c0       	rjmp	.+6      	; 0x2d2 <_Z8LCD_Datah+0x88>
     2cc:	88 b1       	in	r24, 0x08	; 8
     2ce:	88 60       	ori	r24, 0x08	; 8
     2d0:	88 b9       	out	0x08, r24	; 8
	PORTB |= (1 << LCD_EN);
     2d2:	85 b1       	in	r24, 0x05	; 5
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	85 b9       	out	0x05, r24	; 5
     2d8:	f5 e0       	ldi	r31, 0x05	; 5
     2da:	fa 95       	dec	r31
     2dc:	f1 f7       	brne	.-4      	; 0x2da <_Z8LCD_Datah+0x90>
     2de:	00 00       	nop
	_delay_us(1);
	PORTB &= ~(1 << LCD_EN);
     2e0:	85 b1       	in	r24, 0x05	; 5
     2e2:	8e 7f       	andi	r24, 0xFE	; 254
     2e4:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e6:	8f e3       	ldi	r24, 0x3F	; 63
     2e8:	9f e1       	ldi	r25, 0x1F	; 31
     2ea:	01 97       	sbiw	r24, 0x01	; 1
     2ec:	f1 f7       	brne	.-4      	; 0x2ea <_Z8LCD_Datah+0xa0>
     2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <_Z8LCD_Datah+0xa6>
     2f0:	00 00       	nop
     2f2:	08 95       	ret

000002f4 <_Z8LCD_Initv>:
     2f4:	2f ef       	ldi	r18, 0xFF	; 255
     2f6:	89 ef       	ldi	r24, 0xF9	; 249
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	21 50       	subi	r18, 0x01	; 1
     2fc:	80 40       	sbci	r24, 0x00	; 0
     2fe:	90 40       	sbci	r25, 0x00	; 0
     300:	e1 f7       	brne	.-8      	; 0x2fa <_Z8LCD_Initv+0x6>
     302:	00 c0       	rjmp	.+0      	; 0x304 <_Z8LCD_Initv+0x10>
     304:	00 00       	nop
	_delay_ms(2);
}

void LCD_Init(void) {
	_delay_ms(20);
	LCD_Command(0x02);
     306:	82 e0       	ldi	r24, 0x02	; 2
     308:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
	LCD_Command(0x28);
     30c:	88 e2       	ldi	r24, 0x28	; 40
     30e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
	LCD_Command(0x0C);
     312:	8c e0       	ldi	r24, 0x0C	; 12
     314:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
	LCD_Command(0x06);
     318:	86 e0       	ldi	r24, 0x06	; 6
     31a:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
	LCD_Command(0x01);
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
     324:	8f e3       	ldi	r24, 0x3F	; 63
     326:	9f e1       	ldi	r25, 0x1F	; 31
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <_Z8LCD_Initv+0x34>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <_Z8LCD_Initv+0x3a>
     32e:	00 00       	nop
     330:	08 95       	ret

00000332 <_Z10LCD_StringPKc>:
	_delay_ms(2);
}

void LCD_String(const char *str) {
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	ec 01       	movw	r28, r24
	while (*str) {
     338:	88 81       	ld	r24, Y
     33a:	88 23       	and	r24, r24
     33c:	21 f0       	breq	.+8      	; 0x346 <_Z10LCD_StringPKc+0x14>
		LCD_Data(*str++);
     33e:	21 96       	adiw	r28, 0x01	; 1
     340:	0e 94 25 01 	call	0x24a	; 0x24a <_Z8LCD_Datah>
	LCD_Command(0x01);
	_delay_ms(2);
}

void LCD_String(const char *str) {
	while (*str) {
     344:	f9 cf       	rjmp	.-14     	; 0x338 <_Z10LCD_StringPKc+0x6>
		LCD_Data(*str++);
	}
}
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	08 95       	ret

0000034c <_Z9LCD_Clearv>:

void LCD_Clear(void) {
	LCD_Command(0x01);
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
     352:	8f e3       	ldi	r24, 0x3F	; 63
     354:	9f e1       	ldi	r25, 0x1F	; 31
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	f1 f7       	brne	.-4      	; 0x356 <_Z9LCD_Clearv+0xa>
     35a:	00 c0       	rjmp	.+0      	; 0x35c <_Z9LCD_Clearv+0x10>
     35c:	00 00       	nop
     35e:	08 95       	ret

00000360 <_Z11Keypad_Readv>:
	_delay_ms(2);
}

char Keypad_Read(void) {
	PORTD |= (1 << COL1 | 1 << COL2 | 1 << COL3 | 1 << COL4);
     360:	8b b1       	in	r24, 0x0b	; 11
     362:	80 6f       	ori	r24, 0xF0	; 240
     364:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << COL1);
     366:	8b b1       	in	r24, 0x0b	; 11
     368:	8f 7e       	andi	r24, 0xEF	; 239
     36a:	8b b9       	out	0x0b, r24	; 11
	if (!(PIND & (1 << ROW1))) { _delay_ms(50); return '7'; }
     36c:	48 99       	sbic	0x09, 0	; 9
     36e:	0b c0       	rjmp	.+22     	; 0x386 <_Z11Keypad_Readv+0x26>
     370:	2f ef       	ldi	r18, 0xFF	; 255
     372:	80 e7       	ldi	r24, 0x70	; 112
     374:	92 e0       	ldi	r25, 0x02	; 2
     376:	21 50       	subi	r18, 0x01	; 1
     378:	80 40       	sbci	r24, 0x00	; 0
     37a:	90 40       	sbci	r25, 0x00	; 0
     37c:	e1 f7       	brne	.-8      	; 0x376 <_Z11Keypad_Readv+0x16>
     37e:	00 c0       	rjmp	.+0      	; 0x380 <_Z11Keypad_Readv+0x20>
     380:	00 00       	nop
     382:	87 e3       	ldi	r24, 0x37	; 55
     384:	08 95       	ret
	if (!(PIND & (1 << ROW2))) { _delay_ms(50); return '4'; }
     386:	49 99       	sbic	0x09, 1	; 9
     388:	0b c0       	rjmp	.+22     	; 0x3a0 <_Z11Keypad_Readv+0x40>
     38a:	2f ef       	ldi	r18, 0xFF	; 255
     38c:	80 e7       	ldi	r24, 0x70	; 112
     38e:	92 e0       	ldi	r25, 0x02	; 2
     390:	21 50       	subi	r18, 0x01	; 1
     392:	80 40       	sbci	r24, 0x00	; 0
     394:	90 40       	sbci	r25, 0x00	; 0
     396:	e1 f7       	brne	.-8      	; 0x390 <_Z11Keypad_Readv+0x30>
     398:	00 c0       	rjmp	.+0      	; 0x39a <_Z11Keypad_Readv+0x3a>
     39a:	00 00       	nop
     39c:	84 e3       	ldi	r24, 0x34	; 52
     39e:	08 95       	ret
	if (!(PIND & (1 << ROW3))) { _delay_ms(50); return '1'; }
     3a0:	4a 99       	sbic	0x09, 2	; 9
     3a2:	0b c0       	rjmp	.+22     	; 0x3ba <_Z11Keypad_Readv+0x5a>
     3a4:	2f ef       	ldi	r18, 0xFF	; 255
     3a6:	80 e7       	ldi	r24, 0x70	; 112
     3a8:	92 e0       	ldi	r25, 0x02	; 2
     3aa:	21 50       	subi	r18, 0x01	; 1
     3ac:	80 40       	sbci	r24, 0x00	; 0
     3ae:	90 40       	sbci	r25, 0x00	; 0
     3b0:	e1 f7       	brne	.-8      	; 0x3aa <_Z11Keypad_Readv+0x4a>
     3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <_Z11Keypad_Readv+0x54>
     3b4:	00 00       	nop
     3b6:	81 e3       	ldi	r24, 0x31	; 49
     3b8:	08 95       	ret
	if (!(PIND & (1 << ROW4))) { _delay_ms(50); return 'O'; }
     3ba:	4b 99       	sbic	0x09, 3	; 9
     3bc:	0b c0       	rjmp	.+22     	; 0x3d4 <_Z11Keypad_Readv+0x74>
     3be:	2f ef       	ldi	r18, 0xFF	; 255
     3c0:	80 e7       	ldi	r24, 0x70	; 112
     3c2:	92 e0       	ldi	r25, 0x02	; 2
     3c4:	21 50       	subi	r18, 0x01	; 1
     3c6:	80 40       	sbci	r24, 0x00	; 0
     3c8:	90 40       	sbci	r25, 0x00	; 0
     3ca:	e1 f7       	brne	.-8      	; 0x3c4 <_Z11Keypad_Readv+0x64>
     3cc:	00 c0       	rjmp	.+0      	; 0x3ce <_Z11Keypad_Readv+0x6e>
     3ce:	00 00       	nop
     3d0:	8f e4       	ldi	r24, 0x4F	; 79
     3d2:	08 95       	ret
	PORTD |= (1 << COL1);
     3d4:	8b b1       	in	r24, 0x0b	; 11
     3d6:	80 61       	ori	r24, 0x10	; 16
     3d8:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << COL2);
     3da:	8b b1       	in	r24, 0x0b	; 11
     3dc:	8f 7d       	andi	r24, 0xDF	; 223
     3de:	8b b9       	out	0x0b, r24	; 11
	if (!(PIND & (1 << ROW1))) { _delay_ms(50); return '8'; }
     3e0:	48 99       	sbic	0x09, 0	; 9
     3e2:	0b c0       	rjmp	.+22     	; 0x3fa <_Z11Keypad_Readv+0x9a>
     3e4:	2f ef       	ldi	r18, 0xFF	; 255
     3e6:	80 e7       	ldi	r24, 0x70	; 112
     3e8:	92 e0       	ldi	r25, 0x02	; 2
     3ea:	21 50       	subi	r18, 0x01	; 1
     3ec:	80 40       	sbci	r24, 0x00	; 0
     3ee:	90 40       	sbci	r25, 0x00	; 0
     3f0:	e1 f7       	brne	.-8      	; 0x3ea <_Z11Keypad_Readv+0x8a>
     3f2:	00 c0       	rjmp	.+0      	; 0x3f4 <_Z11Keypad_Readv+0x94>
     3f4:	00 00       	nop
     3f6:	88 e3       	ldi	r24, 0x38	; 56
     3f8:	08 95       	ret
	if (!(PIND & (1 << ROW2))) { _delay_ms(50); return '5'; }
     3fa:	49 99       	sbic	0x09, 1	; 9
     3fc:	0b c0       	rjmp	.+22     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3fe:	2f ef       	ldi	r18, 0xFF	; 255
     400:	80 e7       	ldi	r24, 0x70	; 112
     402:	92 e0       	ldi	r25, 0x02	; 2
     404:	21 50       	subi	r18, 0x01	; 1
     406:	80 40       	sbci	r24, 0x00	; 0
     408:	90 40       	sbci	r25, 0x00	; 0
     40a:	e1 f7       	brne	.-8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     40c:	00 c0       	rjmp	.+0      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     40e:	00 00       	nop
     410:	85 e3       	ldi	r24, 0x35	; 53
     412:	08 95       	ret
	if (!(PIND & (1 << ROW3))) { _delay_ms(50); return '2'; }
     414:	4a 99       	sbic	0x09, 2	; 9
     416:	0b c0       	rjmp	.+22     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     418:	2f ef       	ldi	r18, 0xFF	; 255
     41a:	80 e7       	ldi	r24, 0x70	; 112
     41c:	92 e0       	ldi	r25, 0x02	; 2
     41e:	21 50       	subi	r18, 0x01	; 1
     420:	80 40       	sbci	r24, 0x00	; 0
     422:	90 40       	sbci	r25, 0x00	; 0
     424:	e1 f7       	brne	.-8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     426:	00 c0       	rjmp	.+0      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     428:	00 00       	nop
     42a:	82 e3       	ldi	r24, 0x32	; 50
     42c:	08 95       	ret
	if (!(PIND & (1 << ROW4))) { _delay_ms(50); return '0'; }
     42e:	4b 99       	sbic	0x09, 3	; 9
     430:	0b c0       	rjmp	.+22     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
     432:	2f ef       	ldi	r18, 0xFF	; 255
     434:	80 e7       	ldi	r24, 0x70	; 112
     436:	92 e0       	ldi	r25, 0x02	; 2
     438:	21 50       	subi	r18, 0x01	; 1
     43a:	80 40       	sbci	r24, 0x00	; 0
     43c:	90 40       	sbci	r25, 0x00	; 0
     43e:	e1 f7       	brne	.-8      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     440:	00 c0       	rjmp	.+0      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     442:	00 00       	nop
     444:	80 e3       	ldi	r24, 0x30	; 48
     446:	08 95       	ret
	PORTD |= (1 << COL2);
     448:	8b b1       	in	r24, 0x0b	; 11
     44a:	80 62       	ori	r24, 0x20	; 32
     44c:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << COL3);
     44e:	8b b1       	in	r24, 0x0b	; 11
     450:	8f 7b       	andi	r24, 0xBF	; 191
     452:	8b b9       	out	0x0b, r24	; 11
	if (!(PIND & (1 << ROW1))) { _delay_ms(50); return '9'; }
     454:	48 99       	sbic	0x09, 0	; 9
     456:	0b c0       	rjmp	.+22     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
     458:	2f ef       	ldi	r18, 0xFF	; 255
     45a:	80 e7       	ldi	r24, 0x70	; 112
     45c:	92 e0       	ldi	r25, 0x02	; 2
     45e:	21 50       	subi	r18, 0x01	; 1
     460:	80 40       	sbci	r24, 0x00	; 0
     462:	90 40       	sbci	r25, 0x00	; 0
     464:	e1 f7       	brne	.-8      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     466:	00 c0       	rjmp	.+0      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     468:	00 00       	nop
     46a:	89 e3       	ldi	r24, 0x39	; 57
     46c:	08 95       	ret
	if (!(PIND & (1 << ROW2))) { _delay_ms(50); return '6'; }
     46e:	49 99       	sbic	0x09, 1	; 9
     470:	0b c0       	rjmp	.+22     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
     472:	2f ef       	ldi	r18, 0xFF	; 255
     474:	80 e7       	ldi	r24, 0x70	; 112
     476:	92 e0       	ldi	r25, 0x02	; 2
     478:	21 50       	subi	r18, 0x01	; 1
     47a:	80 40       	sbci	r24, 0x00	; 0
     47c:	90 40       	sbci	r25, 0x00	; 0
     47e:	e1 f7       	brne	.-8      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     480:	00 c0       	rjmp	.+0      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     482:	00 00       	nop
     484:	86 e3       	ldi	r24, 0x36	; 54
     486:	08 95       	ret
	if (!(PIND & (1 << ROW3))) { _delay_ms(50); return '3'; }
     488:	4a 99       	sbic	0x09, 2	; 9
     48a:	0b c0       	rjmp	.+22     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     48c:	2f ef       	ldi	r18, 0xFF	; 255
     48e:	80 e7       	ldi	r24, 0x70	; 112
     490:	92 e0       	ldi	r25, 0x02	; 2
     492:	21 50       	subi	r18, 0x01	; 1
     494:	80 40       	sbci	r24, 0x00	; 0
     496:	90 40       	sbci	r25, 0x00	; 0
     498:	e1 f7       	brne	.-8      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     49a:	00 c0       	rjmp	.+0      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
     49c:	00 00       	nop
     49e:	83 e3       	ldi	r24, 0x33	; 51
     4a0:	08 95       	ret
	if (!(PIND & (1 << ROW4))) { _delay_ms(50); return '='; }
     4a2:	4b 99       	sbic	0x09, 3	; 9
     4a4:	0b c0       	rjmp	.+22     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
     4a6:	2f ef       	ldi	r18, 0xFF	; 255
     4a8:	80 e7       	ldi	r24, 0x70	; 112
     4aa:	92 e0       	ldi	r25, 0x02	; 2
     4ac:	21 50       	subi	r18, 0x01	; 1
     4ae:	80 40       	sbci	r24, 0x00	; 0
     4b0:	90 40       	sbci	r25, 0x00	; 0
     4b2:	e1 f7       	brne	.-8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
     4b6:	00 00       	nop
     4b8:	8d e3       	ldi	r24, 0x3D	; 61
     4ba:	08 95       	ret
	PORTD |= (1 << COL3);
     4bc:	8b b1       	in	r24, 0x0b	; 11
     4be:	80 64       	ori	r24, 0x40	; 64
     4c0:	8b b9       	out	0x0b, r24	; 11
	PORTD &= ~(1 << COL4);
     4c2:	8b b1       	in	r24, 0x0b	; 11
     4c4:	8f 77       	andi	r24, 0x7F	; 127
     4c6:	8b b9       	out	0x0b, r24	; 11
	if (!(PIND & (1 << ROW1))) { _delay_ms(50); return '/'; }
     4c8:	48 99       	sbic	0x09, 0	; 9
     4ca:	0b c0       	rjmp	.+22     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4cc:	2f ef       	ldi	r18, 0xFF	; 255
     4ce:	80 e7       	ldi	r24, 0x70	; 112
     4d0:	92 e0       	ldi	r25, 0x02	; 2
     4d2:	21 50       	subi	r18, 0x01	; 1
     4d4:	80 40       	sbci	r24, 0x00	; 0
     4d6:	90 40       	sbci	r25, 0x00	; 0
     4d8:	e1 f7       	brne	.-8      	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
     4dc:	00 00       	nop
     4de:	8f e2       	ldi	r24, 0x2F	; 47
     4e0:	08 95       	ret
	if (!(PIND & (1 << ROW2))) { _delay_ms(50); return 'x'; }
     4e2:	49 99       	sbic	0x09, 1	; 9
     4e4:	0b c0       	rjmp	.+22     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
     4e6:	2f ef       	ldi	r18, 0xFF	; 255
     4e8:	80 e7       	ldi	r24, 0x70	; 112
     4ea:	92 e0       	ldi	r25, 0x02	; 2
     4ec:	21 50       	subi	r18, 0x01	; 1
     4ee:	80 40       	sbci	r24, 0x00	; 0
     4f0:	90 40       	sbci	r25, 0x00	; 0
     4f2:	e1 f7       	brne	.-8      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
     4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
     4f6:	00 00       	nop
     4f8:	88 e7       	ldi	r24, 0x78	; 120
     4fa:	08 95       	ret
	if (!(PIND & (1 << ROW3))) { _delay_ms(50); return '-'; }
     4fc:	4a 99       	sbic	0x09, 2	; 9
     4fe:	0b c0       	rjmp	.+22     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
     500:	2f ef       	ldi	r18, 0xFF	; 255
     502:	80 e7       	ldi	r24, 0x70	; 112
     504:	92 e0       	ldi	r25, 0x02	; 2
     506:	21 50       	subi	r18, 0x01	; 1
     508:	80 40       	sbci	r24, 0x00	; 0
     50a:	90 40       	sbci	r25, 0x00	; 0
     50c:	e1 f7       	brne	.-8      	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
     50e:	00 c0       	rjmp	.+0      	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
     510:	00 00       	nop
     512:	8d e2       	ldi	r24, 0x2D	; 45
     514:	08 95       	ret
	if (!(PIND & (1 << ROW4))) { _delay_ms(50); return '+'; }
     516:	4b 99       	sbic	0x09, 3	; 9
     518:	0b c0       	rjmp	.+22     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
     51a:	2f ef       	ldi	r18, 0xFF	; 255
     51c:	80 e7       	ldi	r24, 0x70	; 112
     51e:	92 e0       	ldi	r25, 0x02	; 2
     520:	21 50       	subi	r18, 0x01	; 1
     522:	80 40       	sbci	r24, 0x00	; 0
     524:	90 40       	sbci	r25, 0x00	; 0
     526:	e1 f7       	brne	.-8      	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     528:	00 c0       	rjmp	.+0      	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
     52a:	00 00       	nop
     52c:	8b e2       	ldi	r24, 0x2B	; 43
     52e:	08 95       	ret
	PORTD |= (1 << COL4);
     530:	8b b1       	in	r24, 0x0b	; 11
     532:	80 68       	ori	r24, 0x80	; 128
     534:	8b b9       	out	0x0b, r24	; 11
	return 0;
     536:	80 e0       	ldi	r24, 0x00	; 0
}
     538:	08 95       	ret

0000053a <_Z10Calculatorv>:

void Calculator(void) {
     53a:	4f 92       	push	r4
     53c:	5f 92       	push	r5
     53e:	6f 92       	push	r6
     540:	7f 92       	push	r7
     542:	8f 92       	push	r8
     544:	9f 92       	push	r9
     546:	af 92       	push	r10
     548:	bf 92       	push	r11
     54a:	cf 92       	push	r12
     54c:	df 92       	push	r13
     54e:	ef 92       	push	r14
     550:	ff 92       	push	r15
     552:	0f 93       	push	r16
     554:	1f 93       	push	r17
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	cd b7       	in	r28, 0x3d	; 61
     55c:	de b7       	in	r29, 0x3e	; 62
     55e:	2c 97       	sbiw	r28, 0x0c	; 12
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	f8 94       	cli
     564:	de bf       	out	0x3e, r29	; 62
     566:	0f be       	out	0x3f, r0	; 63
     568:	cd bf       	out	0x3d, r28	; 61
	long result = 0;
	float result_float = 0.0;
	static char last_result[16] = "";   // Persistent result storage

	// If there's a previous result, display it
	if (last_result[0] != '\0') {
     56a:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
     56e:	88 23       	and	r24, r24
     570:	e1 f0       	breq	.+56     	; 0x5aa <_Z10Calculatorv+0x70>
		LCD_Clear();
     572:	0e 94 a6 01 	call	0x34c	; 0x34c <_Z9LCD_Clearv>
		LCD_String(last_result);
     576:	86 e3       	ldi	r24, 0x36	; 54
     578:	91 e0       	ldi	r25, 0x01	; 1
     57a:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
		while ((key = Keypad_Read()) != 'O') {
     57e:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     582:	8f 34       	cpi	r24, 0x4F	; 79
     584:	39 f0       	breq	.+14     	; 0x594 <_Z10Calculatorv+0x5a>
     586:	8f e3       	ldi	r24, 0x3F	; 63
     588:	9c e9       	ldi	r25, 0x9C	; 156
     58a:	01 97       	sbiw	r24, 0x01	; 1
     58c:	f1 f7       	brne	.-4      	; 0x58a <_Z10Calculatorv+0x50>
     58e:	00 c0       	rjmp	.+0      	; 0x590 <_Z10Calculatorv+0x56>
     590:	00 00       	nop
     592:	f5 cf       	rjmp	.-22     	; 0x57e <_Z10Calculatorv+0x44>
			_delay_ms(10);
		}
		while (Keypad_Read() != 0) _delay_ms(10); // Wait for key release
     594:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     598:	88 23       	and	r24, r24
     59a:	39 f0       	breq	.+14     	; 0x5aa <_Z10Calculatorv+0x70>
     59c:	8f e3       	ldi	r24, 0x3F	; 63
     59e:	9c e9       	ldi	r25, 0x9C	; 156
     5a0:	01 97       	sbiw	r24, 0x01	; 1
     5a2:	f1 f7       	brne	.-4      	; 0x5a0 <_Z10Calculatorv+0x66>
     5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <_Z10Calculatorv+0x6c>
     5a6:	00 00       	nop
     5a8:	f5 cf       	rjmp	.-22     	; 0x594 <_Z10Calculatorv+0x5a>
	}

	// Start new calculation
	LCD_Clear();
     5aa:	0e 94 a6 01 	call	0x34c	; 0x34c <_Z9LCD_Clearv>
	pos = 0;

	// Input first number (max 5 digits to fit 16-char line)
	while ((key = Keypad_Read()) == 0) _delay_ms(10);
     5ae:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     5b2:	18 2f       	mov	r17, r24
     5b4:	81 11       	cpse	r24, r1
     5b6:	07 c0       	rjmp	.+14     	; 0x5c6 <_Z10Calculatorv+0x8c>
     5b8:	8f e3       	ldi	r24, 0x3F	; 63
     5ba:	9c e9       	ldi	r25, 0x9C	; 156
     5bc:	01 97       	sbiw	r24, 0x01	; 1
     5be:	f1 f7       	brne	.-4      	; 0x5bc <_Z10Calculatorv+0x82>
     5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <_Z10Calculatorv+0x88>
     5c2:	00 00       	nop
     5c4:	f4 cf       	rjmp	.-24     	; 0x5ae <_Z10Calculatorv+0x74>
     5c6:	e1 2c       	mov	r14, r1
     5c8:	f1 2c       	mov	r15, r1
     5ca:	c1 2c       	mov	r12, r1
     5cc:	d1 2c       	mov	r13, r1
	while (key != '+' && key != '-' && key != 'x' && key != '/' && key != 'O' && pos < 5) {
     5ce:	1b 32       	cpi	r17, 0x2B	; 43
     5d0:	b9 f1       	breq	.+110    	; 0x640 <_Z10Calculatorv+0x106>
     5d2:	1d 32       	cpi	r17, 0x2D	; 45
     5d4:	a9 f1       	breq	.+106    	; 0x640 <_Z10Calculatorv+0x106>
     5d6:	18 37       	cpi	r17, 0x78	; 120
     5d8:	99 f1       	breq	.+102    	; 0x640 <_Z10Calculatorv+0x106>
     5da:	1f 32       	cpi	r17, 0x2F	; 47
     5dc:	89 f1       	breq	.+98     	; 0x640 <_Z10Calculatorv+0x106>
     5de:	1f 34       	cpi	r17, 0x4F	; 79
     5e0:	79 f1       	breq	.+94     	; 0x640 <_Z10Calculatorv+0x106>
     5e2:	95 e0       	ldi	r25, 0x05	; 5
     5e4:	e9 16       	cp	r14, r25
     5e6:	f1 04       	cpc	r15, r1
     5e8:	5c f5       	brge	.+86     	; 0x640 <_Z10Calculatorv+0x106>
		if (key >= '0' && key <= '9') {
     5ea:	80 ed       	ldi	r24, 0xD0	; 208
     5ec:	81 0f       	add	r24, r17
     5ee:	8a 30       	cpi	r24, 0x0A	; 10
     5f0:	80 f4       	brcc	.+32     	; 0x612 <_Z10Calculatorv+0xd8>
			LCD_Data(key);
     5f2:	81 2f       	mov	r24, r17
     5f4:	0e 94 25 01 	call	0x24a	; 0x24a <_Z8LCD_Datah>
			num1[i++] = key;
     5f8:	e1 e0       	ldi	r30, 0x01	; 1
     5fa:	f0 e0       	ldi	r31, 0x00	; 0
     5fc:	ec 0f       	add	r30, r28
     5fe:	fd 1f       	adc	r31, r29
     600:	ec 0d       	add	r30, r12
     602:	fd 1d       	adc	r31, r13
     604:	10 83       	st	Z, r17
			pos++;
     606:	2f ef       	ldi	r18, 0xFF	; 255
     608:	e2 1a       	sub	r14, r18
     60a:	f2 0a       	sbc	r15, r18
	// Input first number (max 5 digits to fit 16-char line)
	while ((key = Keypad_Read()) == 0) _delay_ms(10);
	while (key != '+' && key != '-' && key != 'x' && key != '/' && key != 'O' && pos < 5) {
		if (key >= '0' && key <= '9') {
			LCD_Data(key);
			num1[i++] = key;
     60c:	c6 01       	movw	r24, r12
     60e:	01 96       	adiw	r24, 0x01	; 1
     610:	6c 01       	movw	r12, r24
			pos++;
		}
		while ((key = Keypad_Read()) != 0) _delay_ms(10); // Debounce
     612:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     616:	88 23       	and	r24, r24
     618:	39 f0       	breq	.+14     	; 0x628 <_Z10Calculatorv+0xee>
     61a:	8f e3       	ldi	r24, 0x3F	; 63
     61c:	9c e9       	ldi	r25, 0x9C	; 156
     61e:	01 97       	sbiw	r24, 0x01	; 1
     620:	f1 f7       	brne	.-4      	; 0x61e <_Z10Calculatorv+0xe4>
     622:	00 c0       	rjmp	.+0      	; 0x624 <_Z10Calculatorv+0xea>
     624:	00 00       	nop
     626:	f5 cf       	rjmp	.-22     	; 0x612 <_Z10Calculatorv+0xd8>
		while ((key = Keypad_Read()) == 0) _delay_ms(10); // Wait for next key
     628:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     62c:	18 2f       	mov	r17, r24
     62e:	81 11       	cpse	r24, r1
     630:	ce cf       	rjmp	.-100    	; 0x5ce <_Z10Calculatorv+0x94>
     632:	8f e3       	ldi	r24, 0x3F	; 63
     634:	9c e9       	ldi	r25, 0x9C	; 156
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <_Z10Calculatorv+0xfc>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <_Z10Calculatorv+0x102>
     63c:	00 00       	nop
     63e:	f4 cf       	rjmp	.-24     	; 0x628 <_Z10Calculatorv+0xee>
	}
	num1[i] = '\0';
     640:	e1 e0       	ldi	r30, 0x01	; 1
     642:	f0 e0       	ldi	r31, 0x00	; 0
     644:	ec 0f       	add	r30, r28
     646:	fd 1f       	adc	r31, r29
     648:	ec 0d       	add	r30, r12
     64a:	fd 1d       	adc	r31, r13
     64c:	10 82       	st	Z, r1

	// Check for reset
	if (key == 'O') {
     64e:	1f 34       	cpi	r17, 0x4F	; 79
     650:	91 f4       	brne	.+36     	; 0x676 <_Z10Calculatorv+0x13c>
		last_result[0] = '\0';
     652:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <__data_end>
		LCD_Clear();
     656:	0e 94 a6 01 	call	0x34c	; 0x34c <_Z9LCD_Clearv>
		LCD_String("Calculator Ready");
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	91 e0       	ldi	r25, 0x01	; 1
     65e:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
     662:	9f ef       	ldi	r25, 0xFF	; 255
     664:	23 ed       	ldi	r18, 0xD3	; 211
     666:	80 e3       	ldi	r24, 0x30	; 48
     668:	91 50       	subi	r25, 0x01	; 1
     66a:	20 40       	sbci	r18, 0x00	; 0
     66c:	80 40       	sbci	r24, 0x00	; 0
     66e:	e1 f7       	brne	.-8      	; 0x668 <_Z10Calculatorv+0x12e>
     670:	00 c0       	rjmp	.+0      	; 0x672 <_Z10Calculatorv+0x138>
     672:	00 00       	nop
     674:	39 c1       	rjmp	.+626    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
		_delay_ms(1000);
		return;
	}

	// Display and store operator
	if (pos < 15) {
     676:	9f e0       	ldi	r25, 0x0F	; 15
     678:	e9 16       	cp	r14, r25
     67a:	f1 04       	cpc	r15, r1
     67c:	3c f4       	brge	.+14     	; 0x68c <_Z10Calculatorv+0x152>
		op = key;
		LCD_Data(op);
     67e:	81 2f       	mov	r24, r17
     680:	0e 94 25 01 	call	0x24a	; 0x24a <_Z8LCD_Datah>
		pos++;
     684:	2f ef       	ldi	r18, 0xFF	; 255
     686:	e2 1a       	sub	r14, r18
     688:	f2 0a       	sbc	r15, r18
     68a:	10 c0       	rjmp	.+32     	; 0x6ac <_Z10Calculatorv+0x172>
		} else {
		LCD_Clear();
     68c:	0e 94 a6 01 	call	0x34c	; 0x34c <_Z9LCD_Clearv>
		LCD_String("Input Too Long");
     690:	81 e1       	ldi	r24, 0x11	; 17
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
     698:	8f ef       	ldi	r24, 0xFF	; 255
     69a:	97 ea       	ldi	r25, 0xA7	; 167
     69c:	21 e6       	ldi	r18, 0x61	; 97
     69e:	81 50       	subi	r24, 0x01	; 1
     6a0:	90 40       	sbci	r25, 0x00	; 0
     6a2:	20 40       	sbci	r18, 0x00	; 0
     6a4:	e1 f7       	brne	.-8      	; 0x69e <_Z10Calculatorv+0x164>
     6a6:	00 c0       	rjmp	.+0      	; 0x6a8 <_Z10Calculatorv+0x16e>
     6a8:	00 00       	nop
     6aa:	1e c1       	rjmp	.+572    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
		_delay_ms(2000);
		return;
	}

	// Input second number (max 5 digits)
	while ((key = Keypad_Read()) == 0) _delay_ms(10);
     6ac:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     6b0:	08 2f       	mov	r16, r24
     6b2:	81 11       	cpse	r24, r1
     6b4:	07 c0       	rjmp	.+14     	; 0x6c4 <_Z10Calculatorv+0x18a>
     6b6:	8f e3       	ldi	r24, 0x3F	; 63
     6b8:	9c e9       	ldi	r25, 0x9C	; 156
     6ba:	01 97       	sbiw	r24, 0x01	; 1
     6bc:	f1 f7       	brne	.-4      	; 0x6ba <_Z10Calculatorv+0x180>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <_Z10Calculatorv+0x186>
     6c0:	00 00       	nop
     6c2:	f4 cf       	rjmp	.-24     	; 0x6ac <_Z10Calculatorv+0x172>
     6c4:	c1 2c       	mov	r12, r1
     6c6:	d1 2c       	mov	r13, r1
	while (key != '=' && key != 'O' && pos < 10) { // Leave room for "=result"
     6c8:	0d 33       	cpi	r16, 0x3D	; 61
     6ca:	89 f1       	breq	.+98     	; 0x72e <_Z10Calculatorv+0x1f4>
     6cc:	0f 34       	cpi	r16, 0x4F	; 79
     6ce:	79 f1       	breq	.+94     	; 0x72e <_Z10Calculatorv+0x1f4>
     6d0:	9a e0       	ldi	r25, 0x0A	; 10
     6d2:	e9 16       	cp	r14, r25
     6d4:	f1 04       	cpc	r15, r1
     6d6:	5c f5       	brge	.+86     	; 0x72e <_Z10Calculatorv+0x1f4>
		if (key >= '0' && key <= '9') {
     6d8:	80 ed       	ldi	r24, 0xD0	; 208
     6da:	80 0f       	add	r24, r16
     6dc:	8a 30       	cpi	r24, 0x0A	; 10
     6de:	80 f4       	brcc	.+32     	; 0x700 <_Z10Calculatorv+0x1c6>
			LCD_Data(key);
     6e0:	80 2f       	mov	r24, r16
     6e2:	0e 94 25 01 	call	0x24a	; 0x24a <_Z8LCD_Datah>
			num2[j++] = key;
     6e6:	e7 e0       	ldi	r30, 0x07	; 7
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	ec 0f       	add	r30, r28
     6ec:	fd 1f       	adc	r31, r29
     6ee:	ec 0d       	add	r30, r12
     6f0:	fd 1d       	adc	r31, r13
     6f2:	00 83       	st	Z, r16
			pos++;
     6f4:	2f ef       	ldi	r18, 0xFF	; 255
     6f6:	e2 1a       	sub	r14, r18
     6f8:	f2 0a       	sbc	r15, r18
	// Input second number (max 5 digits)
	while ((key = Keypad_Read()) == 0) _delay_ms(10);
	while (key != '=' && key != 'O' && pos < 10) { // Leave room for "=result"
		if (key >= '0' && key <= '9') {
			LCD_Data(key);
			num2[j++] = key;
     6fa:	c6 01       	movw	r24, r12
     6fc:	01 96       	adiw	r24, 0x01	; 1
     6fe:	6c 01       	movw	r12, r24
			pos++;
		}
		while ((key = Keypad_Read()) != 0) _delay_ms(10); // Debounce
     700:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     704:	88 23       	and	r24, r24
     706:	39 f0       	breq	.+14     	; 0x716 <_Z10Calculatorv+0x1dc>
     708:	8f e3       	ldi	r24, 0x3F	; 63
     70a:	9c e9       	ldi	r25, 0x9C	; 156
     70c:	01 97       	sbiw	r24, 0x01	; 1
     70e:	f1 f7       	brne	.-4      	; 0x70c <_Z10Calculatorv+0x1d2>
     710:	00 c0       	rjmp	.+0      	; 0x712 <_Z10Calculatorv+0x1d8>
     712:	00 00       	nop
     714:	f5 cf       	rjmp	.-22     	; 0x700 <_Z10Calculatorv+0x1c6>
		while ((key = Keypad_Read()) == 0) _delay_ms(10); // Wait for next key
     716:	0e 94 b0 01 	call	0x360	; 0x360 <_Z11Keypad_Readv>
     71a:	08 2f       	mov	r16, r24
     71c:	81 11       	cpse	r24, r1
     71e:	d4 cf       	rjmp	.-88     	; 0x6c8 <_Z10Calculatorv+0x18e>
     720:	8f e3       	ldi	r24, 0x3F	; 63
     722:	9c e9       	ldi	r25, 0x9C	; 156
     724:	01 97       	sbiw	r24, 0x01	; 1
     726:	f1 f7       	brne	.-4      	; 0x724 <_Z10Calculatorv+0x1ea>
     728:	00 c0       	rjmp	.+0      	; 0x72a <_Z10Calculatorv+0x1f0>
     72a:	00 00       	nop
     72c:	f4 cf       	rjmp	.-24     	; 0x716 <_Z10Calculatorv+0x1dc>
	}
	num2[j] = '\0';
     72e:	e7 e0       	ldi	r30, 0x07	; 7
     730:	f0 e0       	ldi	r31, 0x00	; 0
     732:	ec 0f       	add	r30, r28
     734:	fd 1f       	adc	r31, r29
     736:	ec 0d       	add	r30, r12
     738:	fd 1d       	adc	r31, r13
     73a:	10 82       	st	Z, r1

	// Check for reset
	if (key == 'O') {
     73c:	0f 34       	cpi	r16, 0x4F	; 79
     73e:	91 f4       	brne	.+36     	; 0x764 <_Z10Calculatorv+0x22a>
		last_result[0] = '\0';
     740:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <__data_end>
		LCD_Clear();
     744:	0e 94 a6 01 	call	0x34c	; 0x34c <_Z9LCD_Clearv>
		LCD_String("Calculator Ready");
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	91 e0       	ldi	r25, 0x01	; 1
     74c:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
     750:	9f ef       	ldi	r25, 0xFF	; 255
     752:	23 ed       	ldi	r18, 0xD3	; 211
     754:	80 e3       	ldi	r24, 0x30	; 48
     756:	91 50       	subi	r25, 0x01	; 1
     758:	20 40       	sbci	r18, 0x00	; 0
     75a:	80 40       	sbci	r24, 0x00	; 0
     75c:	e1 f7       	brne	.-8      	; 0x756 <_Z10Calculatorv+0x21c>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <_Z10Calculatorv+0x226>
     760:	00 00       	nop
     762:	c2 c0       	rjmp	.+388    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
		_delay_ms(1000);
		return;
	}

	// Perform calculation and display result when '=' is pressed
	if (key == '=' && pos < 15) {
     764:	0d 33       	cpi	r16, 0x3D	; 61
     766:	09 f0       	breq	.+2      	; 0x76a <_Z10Calculatorv+0x230>
     768:	a2 c0       	rjmp	.+324    	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
     76a:	9f e0       	ldi	r25, 0x0F	; 15
     76c:	e9 16       	cp	r14, r25
     76e:	f1 04       	cpc	r15, r1
     770:	0c f0       	brlt	.+2      	; 0x774 <_Z10Calculatorv+0x23a>
     772:	9d c0       	rjmp	.+314    	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
		long n1 = atol(num1);
     774:	ce 01       	movw	r24, r28
     776:	01 96       	adiw	r24, 0x01	; 1
     778:	0e 94 ed 05 	call	0xbda	; 0xbda <atol>
     77c:	4b 01       	movw	r8, r22
     77e:	5c 01       	movw	r10, r24
		long n2 = atol(num2);
     780:	ce 01       	movw	r24, r28
     782:	07 96       	adiw	r24, 0x07	; 7
     784:	0e 94 ed 05 	call	0xbda	; 0xbda <atol>
     788:	2b 01       	movw	r4, r22
     78a:	3c 01       	movw	r6, r24

		LCD_Data('='); // Append '=' without clearing
     78c:	8d e3       	ldi	r24, 0x3D	; 61
     78e:	0e 94 25 01 	call	0x24a	; 0x24a <_Z8LCD_Datah>
		pos++;
     792:	2f ef       	ldi	r18, 0xFF	; 255
     794:	e2 1a       	sub	r14, r18
     796:	f2 0a       	sbc	r15, r18

		switch (op) {
     798:	1d 32       	cpi	r17, 0x2D	; 45
     79a:	a9 f0       	breq	.+42     	; 0x7c6 <_Z10Calculatorv+0x28c>
     79c:	18 f4       	brcc	.+6      	; 0x7a4 <_Z10Calculatorv+0x26a>
     79e:	1b 32       	cpi	r17, 0x2B	; 43
     7a0:	31 f0       	breq	.+12     	; 0x7ae <_Z10Calculatorv+0x274>
     7a2:	50 c0       	rjmp	.+160    	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     7a4:	1f 32       	cpi	r17, 0x2F	; 47
     7a6:	39 f1       	breq	.+78     	; 0x7f6 <_Z10Calculatorv+0x2bc>
     7a8:	18 37       	cpi	r17, 0x78	; 120
     7aa:	c9 f0       	breq	.+50     	; 0x7de <_Z10Calculatorv+0x2a4>
     7ac:	4b c0       	rjmp	.+150    	; 0x844 <__DATA_REGION_LENGTH__+0x44>
			case '+':
			result = n1 + n2;
     7ae:	c5 01       	movw	r24, r10
     7b0:	b4 01       	movw	r22, r8
     7b2:	64 0d       	add	r22, r4
     7b4:	75 1d       	adc	r23, r5
     7b6:	86 1d       	adc	r24, r6
     7b8:	97 1d       	adc	r25, r7
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
     7ba:	2a e0       	ldi	r18, 0x0A	; 10
     7bc:	46 e3       	ldi	r20, 0x36	; 54
     7be:	51 e0       	ldi	r21, 0x01	; 1
     7c0:	0e 94 14 06 	call	0xc28	; 0xc28 <__ltoa_ncheck>
     7c4:	48 c0       	rjmp	.+144    	; 0x856 <__DATA_REGION_LENGTH__+0x56>
			ltoa(result, last_result, 10);
			break;
			case '-':
			result = n1 - n2;
     7c6:	c5 01       	movw	r24, r10
     7c8:	b4 01       	movw	r22, r8
     7ca:	64 19       	sub	r22, r4
     7cc:	75 09       	sbc	r23, r5
     7ce:	86 09       	sbc	r24, r6
     7d0:	97 09       	sbc	r25, r7
     7d2:	2a e0       	ldi	r18, 0x0A	; 10
     7d4:	46 e3       	ldi	r20, 0x36	; 54
     7d6:	51 e0       	ldi	r21, 0x01	; 1
     7d8:	0e 94 14 06 	call	0xc28	; 0xc28 <__ltoa_ncheck>
     7dc:	3c c0       	rjmp	.+120    	; 0x856 <__DATA_REGION_LENGTH__+0x56>
			ltoa(result, last_result, 10);
			break;
			case 'x':
			result = n1 * n2;
     7de:	a5 01       	movw	r20, r10
     7e0:	94 01       	movw	r18, r8
     7e2:	c3 01       	movw	r24, r6
     7e4:	b2 01       	movw	r22, r4
     7e6:	0e 94 a3 05 	call	0xb46	; 0xb46 <__mulsi3>
     7ea:	2a e0       	ldi	r18, 0x0A	; 10
     7ec:	46 e3       	ldi	r20, 0x36	; 54
     7ee:	51 e0       	ldi	r21, 0x01	; 1
     7f0:	0e 94 14 06 	call	0xc28	; 0xc28 <__ltoa_ncheck>
     7f4:	30 c0       	rjmp	.+96     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
			ltoa(result, last_result, 10);
			break;
			case '/':
			if (n2 != 0) {
     7f6:	41 14       	cp	r4, r1
     7f8:	51 04       	cpc	r5, r1
     7fa:	61 04       	cpc	r6, r1
     7fc:	71 04       	cpc	r7, r1
     7fe:	b9 f0       	breq	.+46     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
				result_float = (float)n1 / n2;
     800:	c5 01       	movw	r24, r10
     802:	b4 01       	movw	r22, r8
     804:	0e 94 17 05 	call	0xa2e	; 0xa2e <__floatsisf>
     808:	4b 01       	movw	r8, r22
     80a:	5c 01       	movw	r10, r24
     80c:	c3 01       	movw	r24, r6
     80e:	b2 01       	movw	r22, r4
     810:	0e 94 17 05 	call	0xa2e	; 0xa2e <__floatsisf>
     814:	9b 01       	movw	r18, r22
     816:	ac 01       	movw	r20, r24
     818:	c5 01       	movw	r24, r10
     81a:	b4 01       	movw	r22, r8
     81c:	0e 94 a3 04 	call	0x946	; 0x946 <__divsf3>
				dtostrf(result_float, 5, 1, last_result); // 5 chars, 1 decimal
     820:	06 e3       	ldi	r16, 0x36	; 54
     822:	11 e0       	ldi	r17, 0x01	; 1
     824:	21 e0       	ldi	r18, 0x01	; 1
     826:	45 e0       	ldi	r20, 0x05	; 5
     828:	0e 94 cd 05 	call	0xb9a	; 0xb9a <dtostrf>
     82c:	14 c0       	rjmp	.+40     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
				} else {
				strcpy(last_result, "Err");
     82e:	e6 e3       	ldi	r30, 0x36	; 54
     830:	f1 e0       	ldi	r31, 0x01	; 1
     832:	85 e4       	ldi	r24, 0x45	; 69
     834:	92 e7       	ldi	r25, 0x72	; 114
     836:	91 83       	std	Z+1, r25	; 0x01
     838:	80 83       	st	Z, r24
     83a:	82 e7       	ldi	r24, 0x72	; 114
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	93 83       	std	Z+3, r25	; 0x03
     840:	82 83       	std	Z+2, r24	; 0x02
     842:	09 c0       	rjmp	.+18     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
			}
			break;
			default:
			strcpy(last_result, "OpErr");
     844:	86 e0       	ldi	r24, 0x06	; 6
     846:	e0 e2       	ldi	r30, 0x20	; 32
     848:	f1 e0       	ldi	r31, 0x01	; 1
     84a:	a6 e3       	ldi	r26, 0x36	; 54
     84c:	b1 e0       	ldi	r27, 0x01	; 1
     84e:	01 90       	ld	r0, Z+
     850:	0d 92       	st	X+, r0
     852:	8a 95       	dec	r24
     854:	e1 f7       	brne	.-8      	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
			break;
		}

		// Append result if space allows
		if (pos + strlen(last_result) <= 16) {
     856:	e6 e3       	ldi	r30, 0x36	; 54
     858:	f1 e0       	ldi	r31, 0x01	; 1
     85a:	01 90       	ld	r0, Z+
     85c:	00 20       	and	r0, r0
     85e:	e9 f7       	brne	.-6      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     860:	31 97       	sbiw	r30, 0x01	; 1
     862:	cf 01       	movw	r24, r30
     864:	86 53       	subi	r24, 0x36	; 54
     866:	91 40       	sbci	r25, 0x01	; 1
     868:	8e 0d       	add	r24, r14
     86a:	9f 1d       	adc	r25, r15
     86c:	41 97       	sbiw	r24, 0x11	; 17
     86e:	28 f4       	brcc	.+10     	; 0x87a <__DATA_REGION_LENGTH__+0x7a>
			LCD_String(last_result);
     870:	86 e3       	ldi	r24, 0x36	; 54
     872:	91 e0       	ldi	r25, 0x01	; 1
     874:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
			_delay_ms(2000);
			return;
		}

		// Update pos after appending result
		pos += strlen(last_result);
     878:	37 c0       	rjmp	.+110    	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
		// Append result if space allows
		if (pos + strlen(last_result) <= 16) {
			LCD_String(last_result);
			} else {
			// If result won't fit, overwrite with error
			LCD_Command(0x80); // Move cursor to start of line
     87a:	80 e8       	ldi	r24, 0x80	; 128
     87c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
			LCD_String("Result Too Long");
     880:	86 e2       	ldi	r24, 0x26	; 38
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
			strcpy(last_result, "Result Too Long");
     888:	80 e1       	ldi	r24, 0x10	; 16
     88a:	e6 e2       	ldi	r30, 0x26	; 38
     88c:	f1 e0       	ldi	r31, 0x01	; 1
     88e:	a6 e3       	ldi	r26, 0x36	; 54
     890:	b1 e0       	ldi	r27, 0x01	; 1
     892:	01 90       	ld	r0, Z+
     894:	0d 92       	st	X+, r0
     896:	8a 95       	dec	r24
     898:	e1 f7       	brne	.-8      	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     89a:	8f ef       	ldi	r24, 0xFF	; 255
     89c:	97 ea       	ldi	r25, 0xA7	; 167
     89e:	21 e6       	ldi	r18, 0x61	; 97
     8a0:	81 50       	subi	r24, 0x01	; 1
     8a2:	90 40       	sbci	r25, 0x00	; 0
     8a4:	20 40       	sbci	r18, 0x00	; 0
     8a6:	e1 f7       	brne	.-8      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
     8a8:	00 c0       	rjmp	.+0      	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
     8aa:	00 00       	nop
     8ac:	1d c0       	rjmp	.+58     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
			return;
		}

		// Update pos after appending result
		pos += strlen(last_result);
		} else if (pos >= 15) {
     8ae:	8f e0       	ldi	r24, 0x0F	; 15
     8b0:	e8 16       	cp	r14, r24
     8b2:	f1 04       	cpc	r15, r1
     8b4:	cc f0       	brlt	.+50     	; 0x8e8 <__DATA_REGION_LENGTH__+0xe8>
		LCD_Command(0x80); // Move cursor to start
     8b6:	80 e8       	ldi	r24, 0x80	; 128
     8b8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <_Z11LCD_Commandh>
		LCD_String("Input Too Long");
     8bc:	81 e1       	ldi	r24, 0x11	; 17
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
		strcpy(last_result, "Input Too Long");
     8c4:	8f e0       	ldi	r24, 0x0F	; 15
     8c6:	e1 e1       	ldi	r30, 0x11	; 17
     8c8:	f1 e0       	ldi	r31, 0x01	; 1
     8ca:	a6 e3       	ldi	r26, 0x36	; 54
     8cc:	b1 e0       	ldi	r27, 0x01	; 1
     8ce:	01 90       	ld	r0, Z+
     8d0:	0d 92       	st	X+, r0
     8d2:	8a 95       	dec	r24
     8d4:	e1 f7       	brne	.-8      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
     8d6:	9f ef       	ldi	r25, 0xFF	; 255
     8d8:	27 ea       	ldi	r18, 0xA7	; 167
     8da:	81 e6       	ldi	r24, 0x61	; 97
     8dc:	91 50       	subi	r25, 0x01	; 1
     8de:	20 40       	sbci	r18, 0x00	; 0
     8e0:	80 40       	sbci	r24, 0x00	; 0
     8e2:	e1 f7       	brne	.-8      	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
     8e4:	00 c0       	rjmp	.+0      	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     8e6:	00 00       	nop
		_delay_ms(2000);
		return;
	}
     8e8:	2c 96       	adiw	r28, 0x0c	; 12
     8ea:	0f b6       	in	r0, 0x3f	; 63
     8ec:	f8 94       	cli
     8ee:	de bf       	out	0x3e, r29	; 62
     8f0:	0f be       	out	0x3f, r0	; 63
     8f2:	cd bf       	out	0x3d, r28	; 61
     8f4:	df 91       	pop	r29
     8f6:	cf 91       	pop	r28
     8f8:	1f 91       	pop	r17
     8fa:	0f 91       	pop	r16
     8fc:	ff 90       	pop	r15
     8fe:	ef 90       	pop	r14
     900:	df 90       	pop	r13
     902:	cf 90       	pop	r12
     904:	bf 90       	pop	r11
     906:	af 90       	pop	r10
     908:	9f 90       	pop	r9
     90a:	8f 90       	pop	r8
     90c:	7f 90       	pop	r7
     90e:	6f 90       	pop	r6
     910:	5f 90       	pop	r5
     912:	4f 90       	pop	r4
     914:	08 95       	ret

00000916 <main>:
void LCD_Clear(void);
char Keypad_Read(void);
void Calculator(void);

int main(void) {
	DDRB |= (1 << LCD_RS) | (1 << LCD_RW) | (1 << LCD_EN);
     916:	84 b1       	in	r24, 0x04	; 4
     918:	87 60       	ori	r24, 0x07	; 7
     91a:	84 b9       	out	0x04, r24	; 4
	DDRC |= (1 << LCD_D4 | 1 << LCD_D5 | 1 << LCD_D6 | 1 << LCD_D7);
     91c:	87 b1       	in	r24, 0x07	; 7
     91e:	8f 60       	ori	r24, 0x0F	; 15
     920:	87 b9       	out	0x07, r24	; 7
	DDRD &= ~(1 << ROW1 | 1 << ROW2 | 1 << ROW3 | 1 << ROW4);
     922:	8a b1       	in	r24, 0x0a	; 10
     924:	80 7f       	andi	r24, 0xF0	; 240
     926:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << COL1 | 1 << COL2 | 1 << COL3 | 1 << COL4);
     928:	8a b1       	in	r24, 0x0a	; 10
     92a:	80 6f       	ori	r24, 0xF0	; 240
     92c:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << ROW1 | 1 << ROW2 | 1 << ROW3 | 1 << ROW4);
     92e:	8b b1       	in	r24, 0x0b	; 11
     930:	8f 60       	ori	r24, 0x0F	; 15
     932:	8b b9       	out	0x0b, r24	; 11

	LCD_Init();
     934:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <_Z8LCD_Initv>
	LCD_String("Calculator Ready");
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	0e 94 99 01 	call	0x332	; 0x332 <_Z10LCD_StringPKc>
	
	while (1) {
		Calculator();
     940:	0e 94 9d 02 	call	0x53a	; 0x53a <_Z10Calculatorv>
     944:	fd cf       	rjmp	.-6      	; 0x940 <main+0x2a>

00000946 <__divsf3>:
     946:	0e 94 b7 04 	call	0x96e	; 0x96e <__divsf3x>
     94a:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_round>
     94e:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscB>
     952:	58 f0       	brcs	.+22     	; 0x96a <__divsf3+0x24>
     954:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_pscA>
     958:	40 f0       	brcs	.+16     	; 0x96a <__divsf3+0x24>
     95a:	29 f4       	brne	.+10     	; 0x966 <__divsf3+0x20>
     95c:	5f 3f       	cpi	r21, 0xFF	; 255
     95e:	29 f0       	breq	.+10     	; 0x96a <__divsf3+0x24>
     960:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__fp_inf>
     964:	51 11       	cpse	r21, r1
     966:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>
     96a:	0c 94 58 05 	jmp	0xab0	; 0xab0 <__fp_nan>

0000096e <__divsf3x>:
     96e:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__fp_split3>
     972:	68 f3       	brcs	.-38     	; 0x94e <__divsf3+0x8>

00000974 <__divsf3_pse>:
     974:	99 23       	and	r25, r25
     976:	b1 f3       	breq	.-20     	; 0x964 <__divsf3+0x1e>
     978:	55 23       	and	r21, r21
     97a:	91 f3       	breq	.-28     	; 0x960 <__divsf3+0x1a>
     97c:	95 1b       	sub	r25, r21
     97e:	55 0b       	sbc	r21, r21
     980:	bb 27       	eor	r27, r27
     982:	aa 27       	eor	r26, r26
     984:	62 17       	cp	r22, r18
     986:	73 07       	cpc	r23, r19
     988:	84 07       	cpc	r24, r20
     98a:	38 f0       	brcs	.+14     	; 0x99a <__divsf3_pse+0x26>
     98c:	9f 5f       	subi	r25, 0xFF	; 255
     98e:	5f 4f       	sbci	r21, 0xFF	; 255
     990:	22 0f       	add	r18, r18
     992:	33 1f       	adc	r19, r19
     994:	44 1f       	adc	r20, r20
     996:	aa 1f       	adc	r26, r26
     998:	a9 f3       	breq	.-22     	; 0x984 <__divsf3_pse+0x10>
     99a:	35 d0       	rcall	.+106    	; 0xa06 <__divsf3_pse+0x92>
     99c:	0e 2e       	mov	r0, r30
     99e:	3a f0       	brmi	.+14     	; 0x9ae <__divsf3_pse+0x3a>
     9a0:	e0 e8       	ldi	r30, 0x80	; 128
     9a2:	32 d0       	rcall	.+100    	; 0xa08 <__divsf3_pse+0x94>
     9a4:	91 50       	subi	r25, 0x01	; 1
     9a6:	50 40       	sbci	r21, 0x00	; 0
     9a8:	e6 95       	lsr	r30
     9aa:	00 1c       	adc	r0, r0
     9ac:	ca f7       	brpl	.-14     	; 0x9a0 <__divsf3_pse+0x2c>
     9ae:	2b d0       	rcall	.+86     	; 0xa06 <__divsf3_pse+0x92>
     9b0:	fe 2f       	mov	r31, r30
     9b2:	29 d0       	rcall	.+82     	; 0xa06 <__divsf3_pse+0x92>
     9b4:	66 0f       	add	r22, r22
     9b6:	77 1f       	adc	r23, r23
     9b8:	88 1f       	adc	r24, r24
     9ba:	bb 1f       	adc	r27, r27
     9bc:	26 17       	cp	r18, r22
     9be:	37 07       	cpc	r19, r23
     9c0:	48 07       	cpc	r20, r24
     9c2:	ab 07       	cpc	r26, r27
     9c4:	b0 e8       	ldi	r27, 0x80	; 128
     9c6:	09 f0       	breq	.+2      	; 0x9ca <__divsf3_pse+0x56>
     9c8:	bb 0b       	sbc	r27, r27
     9ca:	80 2d       	mov	r24, r0
     9cc:	bf 01       	movw	r22, r30
     9ce:	ff 27       	eor	r31, r31
     9d0:	93 58       	subi	r25, 0x83	; 131
     9d2:	5f 4f       	sbci	r21, 0xFF	; 255
     9d4:	3a f0       	brmi	.+14     	; 0x9e4 <__divsf3_pse+0x70>
     9d6:	9e 3f       	cpi	r25, 0xFE	; 254
     9d8:	51 05       	cpc	r21, r1
     9da:	78 f0       	brcs	.+30     	; 0x9fa <__divsf3_pse+0x86>
     9dc:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__fp_inf>
     9e0:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__fp_szero>
     9e4:	5f 3f       	cpi	r21, 0xFF	; 255
     9e6:	e4 f3       	brlt	.-8      	; 0x9e0 <__divsf3_pse+0x6c>
     9e8:	98 3e       	cpi	r25, 0xE8	; 232
     9ea:	d4 f3       	brlt	.-12     	; 0x9e0 <__divsf3_pse+0x6c>
     9ec:	86 95       	lsr	r24
     9ee:	77 95       	ror	r23
     9f0:	67 95       	ror	r22
     9f2:	b7 95       	ror	r27
     9f4:	f7 95       	ror	r31
     9f6:	9f 5f       	subi	r25, 0xFF	; 255
     9f8:	c9 f7       	brne	.-14     	; 0x9ec <__divsf3_pse+0x78>
     9fa:	88 0f       	add	r24, r24
     9fc:	91 1d       	adc	r25, r1
     9fe:	96 95       	lsr	r25
     a00:	87 95       	ror	r24
     a02:	97 f9       	bld	r25, 7
     a04:	08 95       	ret
     a06:	e1 e0       	ldi	r30, 0x01	; 1
     a08:	66 0f       	add	r22, r22
     a0a:	77 1f       	adc	r23, r23
     a0c:	88 1f       	adc	r24, r24
     a0e:	bb 1f       	adc	r27, r27
     a10:	62 17       	cp	r22, r18
     a12:	73 07       	cpc	r23, r19
     a14:	84 07       	cpc	r24, r20
     a16:	ba 07       	cpc	r27, r26
     a18:	20 f0       	brcs	.+8      	; 0xa22 <__divsf3_pse+0xae>
     a1a:	62 1b       	sub	r22, r18
     a1c:	73 0b       	sbc	r23, r19
     a1e:	84 0b       	sbc	r24, r20
     a20:	ba 0b       	sbc	r27, r26
     a22:	ee 1f       	adc	r30, r30
     a24:	88 f7       	brcc	.-30     	; 0xa08 <__divsf3_pse+0x94>
     a26:	e0 95       	com	r30
     a28:	08 95       	ret

00000a2a <__floatunsisf>:
     a2a:	e8 94       	clt
     a2c:	09 c0       	rjmp	.+18     	; 0xa40 <__floatsisf+0x12>

00000a2e <__floatsisf>:
     a2e:	97 fb       	bst	r25, 7
     a30:	3e f4       	brtc	.+14     	; 0xa40 <__floatsisf+0x12>
     a32:	90 95       	com	r25
     a34:	80 95       	com	r24
     a36:	70 95       	com	r23
     a38:	61 95       	neg	r22
     a3a:	7f 4f       	sbci	r23, 0xFF	; 255
     a3c:	8f 4f       	sbci	r24, 0xFF	; 255
     a3e:	9f 4f       	sbci	r25, 0xFF	; 255
     a40:	99 23       	and	r25, r25
     a42:	a9 f0       	breq	.+42     	; 0xa6e <__floatsisf+0x40>
     a44:	f9 2f       	mov	r31, r25
     a46:	96 e9       	ldi	r25, 0x96	; 150
     a48:	bb 27       	eor	r27, r27
     a4a:	93 95       	inc	r25
     a4c:	f6 95       	lsr	r31
     a4e:	87 95       	ror	r24
     a50:	77 95       	ror	r23
     a52:	67 95       	ror	r22
     a54:	b7 95       	ror	r27
     a56:	f1 11       	cpse	r31, r1
     a58:	f8 cf       	rjmp	.-16     	; 0xa4a <__floatsisf+0x1c>
     a5a:	fa f4       	brpl	.+62     	; 0xa9a <__floatsisf+0x6c>
     a5c:	bb 0f       	add	r27, r27
     a5e:	11 f4       	brne	.+4      	; 0xa64 <__floatsisf+0x36>
     a60:	60 ff       	sbrs	r22, 0
     a62:	1b c0       	rjmp	.+54     	; 0xa9a <__floatsisf+0x6c>
     a64:	6f 5f       	subi	r22, 0xFF	; 255
     a66:	7f 4f       	sbci	r23, 0xFF	; 255
     a68:	8f 4f       	sbci	r24, 0xFF	; 255
     a6a:	9f 4f       	sbci	r25, 0xFF	; 255
     a6c:	16 c0       	rjmp	.+44     	; 0xa9a <__floatsisf+0x6c>
     a6e:	88 23       	and	r24, r24
     a70:	11 f0       	breq	.+4      	; 0xa76 <__floatsisf+0x48>
     a72:	96 e9       	ldi	r25, 0x96	; 150
     a74:	11 c0       	rjmp	.+34     	; 0xa98 <__floatsisf+0x6a>
     a76:	77 23       	and	r23, r23
     a78:	21 f0       	breq	.+8      	; 0xa82 <__floatsisf+0x54>
     a7a:	9e e8       	ldi	r25, 0x8E	; 142
     a7c:	87 2f       	mov	r24, r23
     a7e:	76 2f       	mov	r23, r22
     a80:	05 c0       	rjmp	.+10     	; 0xa8c <__floatsisf+0x5e>
     a82:	66 23       	and	r22, r22
     a84:	71 f0       	breq	.+28     	; 0xaa2 <__floatsisf+0x74>
     a86:	96 e8       	ldi	r25, 0x86	; 134
     a88:	86 2f       	mov	r24, r22
     a8a:	70 e0       	ldi	r23, 0x00	; 0
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	2a f0       	brmi	.+10     	; 0xa9a <__floatsisf+0x6c>
     a90:	9a 95       	dec	r25
     a92:	66 0f       	add	r22, r22
     a94:	77 1f       	adc	r23, r23
     a96:	88 1f       	adc	r24, r24
     a98:	da f7       	brpl	.-10     	; 0xa90 <__floatsisf+0x62>
     a9a:	88 0f       	add	r24, r24
     a9c:	96 95       	lsr	r25
     a9e:	87 95       	ror	r24
     aa0:	97 f9       	bld	r25, 7
     aa2:	08 95       	ret

00000aa4 <__fp_inf>:
     aa4:	97 f9       	bld	r25, 7
     aa6:	9f 67       	ori	r25, 0x7F	; 127
     aa8:	80 e8       	ldi	r24, 0x80	; 128
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	60 e0       	ldi	r22, 0x00	; 0
     aae:	08 95       	ret

00000ab0 <__fp_nan>:
     ab0:	9f ef       	ldi	r25, 0xFF	; 255
     ab2:	80 ec       	ldi	r24, 0xC0	; 192
     ab4:	08 95       	ret

00000ab6 <__fp_pscA>:
     ab6:	00 24       	eor	r0, r0
     ab8:	0a 94       	dec	r0
     aba:	16 16       	cp	r1, r22
     abc:	17 06       	cpc	r1, r23
     abe:	18 06       	cpc	r1, r24
     ac0:	09 06       	cpc	r0, r25
     ac2:	08 95       	ret

00000ac4 <__fp_pscB>:
     ac4:	00 24       	eor	r0, r0
     ac6:	0a 94       	dec	r0
     ac8:	12 16       	cp	r1, r18
     aca:	13 06       	cpc	r1, r19
     acc:	14 06       	cpc	r1, r20
     ace:	05 06       	cpc	r0, r21
     ad0:	08 95       	ret

00000ad2 <__fp_round>:
     ad2:	09 2e       	mov	r0, r25
     ad4:	03 94       	inc	r0
     ad6:	00 0c       	add	r0, r0
     ad8:	11 f4       	brne	.+4      	; 0xade <__fp_round+0xc>
     ada:	88 23       	and	r24, r24
     adc:	52 f0       	brmi	.+20     	; 0xaf2 <__fp_round+0x20>
     ade:	bb 0f       	add	r27, r27
     ae0:	40 f4       	brcc	.+16     	; 0xaf2 <__fp_round+0x20>
     ae2:	bf 2b       	or	r27, r31
     ae4:	11 f4       	brne	.+4      	; 0xaea <__fp_round+0x18>
     ae6:	60 ff       	sbrs	r22, 0
     ae8:	04 c0       	rjmp	.+8      	; 0xaf2 <__fp_round+0x20>
     aea:	6f 5f       	subi	r22, 0xFF	; 255
     aec:	7f 4f       	sbci	r23, 0xFF	; 255
     aee:	8f 4f       	sbci	r24, 0xFF	; 255
     af0:	9f 4f       	sbci	r25, 0xFF	; 255
     af2:	08 95       	ret

00000af4 <__fp_split3>:
     af4:	57 fd       	sbrc	r21, 7
     af6:	90 58       	subi	r25, 0x80	; 128
     af8:	44 0f       	add	r20, r20
     afa:	55 1f       	adc	r21, r21
     afc:	59 f0       	breq	.+22     	; 0xb14 <__fp_splitA+0x10>
     afe:	5f 3f       	cpi	r21, 0xFF	; 255
     b00:	71 f0       	breq	.+28     	; 0xb1e <__fp_splitA+0x1a>
     b02:	47 95       	ror	r20

00000b04 <__fp_splitA>:
     b04:	88 0f       	add	r24, r24
     b06:	97 fb       	bst	r25, 7
     b08:	99 1f       	adc	r25, r25
     b0a:	61 f0       	breq	.+24     	; 0xb24 <__fp_splitA+0x20>
     b0c:	9f 3f       	cpi	r25, 0xFF	; 255
     b0e:	79 f0       	breq	.+30     	; 0xb2e <__fp_splitA+0x2a>
     b10:	87 95       	ror	r24
     b12:	08 95       	ret
     b14:	12 16       	cp	r1, r18
     b16:	13 06       	cpc	r1, r19
     b18:	14 06       	cpc	r1, r20
     b1a:	55 1f       	adc	r21, r21
     b1c:	f2 cf       	rjmp	.-28     	; 0xb02 <__fp_split3+0xe>
     b1e:	46 95       	lsr	r20
     b20:	f1 df       	rcall	.-30     	; 0xb04 <__fp_splitA>
     b22:	08 c0       	rjmp	.+16     	; 0xb34 <__fp_splitA+0x30>
     b24:	16 16       	cp	r1, r22
     b26:	17 06       	cpc	r1, r23
     b28:	18 06       	cpc	r1, r24
     b2a:	99 1f       	adc	r25, r25
     b2c:	f1 cf       	rjmp	.-30     	; 0xb10 <__fp_splitA+0xc>
     b2e:	86 95       	lsr	r24
     b30:	71 05       	cpc	r23, r1
     b32:	61 05       	cpc	r22, r1
     b34:	08 94       	sec
     b36:	08 95       	ret

00000b38 <__fp_zero>:
     b38:	e8 94       	clt

00000b3a <__fp_szero>:
     b3a:	bb 27       	eor	r27, r27
     b3c:	66 27       	eor	r22, r22
     b3e:	77 27       	eor	r23, r23
     b40:	cb 01       	movw	r24, r22
     b42:	97 f9       	bld	r25, 7
     b44:	08 95       	ret

00000b46 <__mulsi3>:
     b46:	db 01       	movw	r26, r22
     b48:	8f 93       	push	r24
     b4a:	9f 93       	push	r25
     b4c:	0e 94 b3 05 	call	0xb66	; 0xb66 <__muluhisi3>
     b50:	bf 91       	pop	r27
     b52:	af 91       	pop	r26
     b54:	a2 9f       	mul	r26, r18
     b56:	80 0d       	add	r24, r0
     b58:	91 1d       	adc	r25, r1
     b5a:	a3 9f       	mul	r26, r19
     b5c:	90 0d       	add	r25, r0
     b5e:	b2 9f       	mul	r27, r18
     b60:	90 0d       	add	r25, r0
     b62:	11 24       	eor	r1, r1
     b64:	08 95       	ret

00000b66 <__muluhisi3>:
     b66:	0e 94 be 05 	call	0xb7c	; 0xb7c <__umulhisi3>
     b6a:	a5 9f       	mul	r26, r21
     b6c:	90 0d       	add	r25, r0
     b6e:	b4 9f       	mul	r27, r20
     b70:	90 0d       	add	r25, r0
     b72:	a4 9f       	mul	r26, r20
     b74:	80 0d       	add	r24, r0
     b76:	91 1d       	adc	r25, r1
     b78:	11 24       	eor	r1, r1
     b7a:	08 95       	ret

00000b7c <__umulhisi3>:
     b7c:	a2 9f       	mul	r26, r18
     b7e:	b0 01       	movw	r22, r0
     b80:	b3 9f       	mul	r27, r19
     b82:	c0 01       	movw	r24, r0
     b84:	a3 9f       	mul	r26, r19
     b86:	70 0d       	add	r23, r0
     b88:	81 1d       	adc	r24, r1
     b8a:	11 24       	eor	r1, r1
     b8c:	91 1d       	adc	r25, r1
     b8e:	b2 9f       	mul	r27, r18
     b90:	70 0d       	add	r23, r0
     b92:	81 1d       	adc	r24, r1
     b94:	11 24       	eor	r1, r1
     b96:	91 1d       	adc	r25, r1
     b98:	08 95       	ret

00000b9a <dtostrf>:
     b9a:	ef 92       	push	r14
     b9c:	0f 93       	push	r16
     b9e:	1f 93       	push	r17
     ba0:	cf 93       	push	r28
     ba2:	df 93       	push	r29
     ba4:	e8 01       	movw	r28, r16
     ba6:	47 fd       	sbrc	r20, 7
     ba8:	02 c0       	rjmp	.+4      	; 0xbae <dtostrf+0x14>
     baa:	34 e0       	ldi	r19, 0x04	; 4
     bac:	01 c0       	rjmp	.+2      	; 0xbb0 <dtostrf+0x16>
     bae:	34 e1       	ldi	r19, 0x14	; 20
     bb0:	04 2e       	mov	r0, r20
     bb2:	00 0c       	add	r0, r0
     bb4:	55 0b       	sbc	r21, r21
     bb6:	57 ff       	sbrs	r21, 7
     bb8:	03 c0       	rjmp	.+6      	; 0xbc0 <dtostrf+0x26>
     bba:	51 95       	neg	r21
     bbc:	41 95       	neg	r20
     bbe:	51 09       	sbc	r21, r1
     bc0:	e3 2e       	mov	r14, r19
     bc2:	02 2f       	mov	r16, r18
     bc4:	24 2f       	mov	r18, r20
     bc6:	ae 01       	movw	r20, r28
     bc8:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <dtoa_prf>
     bcc:	ce 01       	movw	r24, r28
     bce:	df 91       	pop	r29
     bd0:	cf 91       	pop	r28
     bd2:	1f 91       	pop	r17
     bd4:	0f 91       	pop	r16
     bd6:	ef 90       	pop	r14
     bd8:	08 95       	ret

00000bda <atol>:
     bda:	1f 93       	push	r17
     bdc:	fc 01       	movw	r30, r24
     bde:	99 27       	eor	r25, r25
     be0:	88 27       	eor	r24, r24
     be2:	bc 01       	movw	r22, r24
     be4:	e8 94       	clt
     be6:	11 91       	ld	r17, Z+
     be8:	10 32       	cpi	r17, 0x20	; 32
     bea:	e9 f3       	breq	.-6      	; 0xbe6 <atol+0xc>
     bec:	19 30       	cpi	r17, 0x09	; 9
     bee:	10 f0       	brcs	.+4      	; 0xbf4 <atol+0x1a>
     bf0:	1e 30       	cpi	r17, 0x0E	; 14
     bf2:	c8 f3       	brcs	.-14     	; 0xbe6 <atol+0xc>
     bf4:	1b 32       	cpi	r17, 0x2B	; 43
     bf6:	51 f0       	breq	.+20     	; 0xc0c <atol+0x32>
     bf8:	1d 32       	cpi	r17, 0x2D	; 45
     bfa:	49 f4       	brne	.+18     	; 0xc0e <atol+0x34>
     bfc:	68 94       	set
     bfe:	06 c0       	rjmp	.+12     	; 0xc0c <atol+0x32>
     c00:	0e 94 23 06 	call	0xc46	; 0xc46 <__mulsi_const_10>
     c04:	61 0f       	add	r22, r17
     c06:	71 1d       	adc	r23, r1
     c08:	81 1d       	adc	r24, r1
     c0a:	91 1d       	adc	r25, r1
     c0c:	11 91       	ld	r17, Z+
     c0e:	10 53       	subi	r17, 0x30	; 48
     c10:	1a 30       	cpi	r17, 0x0A	; 10
     c12:	b0 f3       	brcs	.-20     	; 0xc00 <atol+0x26>
     c14:	3e f4       	brtc	.+14     	; 0xc24 <atol+0x4a>
     c16:	90 95       	com	r25
     c18:	80 95       	com	r24
     c1a:	70 95       	com	r23
     c1c:	61 95       	neg	r22
     c1e:	7f 4f       	sbci	r23, 0xFF	; 255
     c20:	8f 4f       	sbci	r24, 0xFF	; 255
     c22:	9f 4f       	sbci	r25, 0xFF	; 255
     c24:	1f 91       	pop	r17
     c26:	08 95       	ret

00000c28 <__ltoa_ncheck>:
     c28:	bb 27       	eor	r27, r27
     c2a:	2a 30       	cpi	r18, 0x0A	; 10
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__ltoa_ncheck+0x1a>
     c2e:	99 23       	and	r25, r25
     c30:	42 f4       	brpl	.+16     	; 0xc42 <__ltoa_ncheck+0x1a>
     c32:	bd e2       	ldi	r27, 0x2D	; 45
     c34:	90 95       	com	r25
     c36:	80 95       	com	r24
     c38:	70 95       	com	r23
     c3a:	61 95       	neg	r22
     c3c:	7f 4f       	sbci	r23, 0xFF	; 255
     c3e:	8f 4f       	sbci	r24, 0xFF	; 255
     c40:	9f 4f       	sbci	r25, 0xFF	; 255
     c42:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__ultoa_common>

00000c46 <__mulsi_const_10>:
     c46:	59 2f       	mov	r21, r25
     c48:	48 2f       	mov	r20, r24
     c4a:	37 2f       	mov	r19, r23
     c4c:	26 2f       	mov	r18, r22
     c4e:	66 0f       	add	r22, r22
     c50:	77 1f       	adc	r23, r23
     c52:	88 1f       	adc	r24, r24
     c54:	99 1f       	adc	r25, r25
     c56:	66 0f       	add	r22, r22
     c58:	77 1f       	adc	r23, r23
     c5a:	88 1f       	adc	r24, r24
     c5c:	99 1f       	adc	r25, r25
     c5e:	62 0f       	add	r22, r18
     c60:	73 1f       	adc	r23, r19
     c62:	84 1f       	adc	r24, r20
     c64:	95 1f       	adc	r25, r21
     c66:	66 0f       	add	r22, r22
     c68:	77 1f       	adc	r23, r23
     c6a:	88 1f       	adc	r24, r24
     c6c:	99 1f       	adc	r25, r25
     c6e:	08 95       	ret

00000c70 <__ultoa_ncheck>:
     c70:	bb 27       	eor	r27, r27

00000c72 <__ultoa_common>:
     c72:	fa 01       	movw	r30, r20
     c74:	a6 2f       	mov	r26, r22
     c76:	62 17       	cp	r22, r18
     c78:	71 05       	cpc	r23, r1
     c7a:	81 05       	cpc	r24, r1
     c7c:	91 05       	cpc	r25, r1
     c7e:	33 0b       	sbc	r19, r19
     c80:	30 fb       	bst	r19, 0
     c82:	66 f0       	brts	.+24     	; 0xc9c <__ultoa_common+0x2a>
     c84:	aa 27       	eor	r26, r26
     c86:	66 0f       	add	r22, r22
     c88:	77 1f       	adc	r23, r23
     c8a:	88 1f       	adc	r24, r24
     c8c:	99 1f       	adc	r25, r25
     c8e:	aa 1f       	adc	r26, r26
     c90:	a2 17       	cp	r26, r18
     c92:	10 f0       	brcs	.+4      	; 0xc98 <__ultoa_common+0x26>
     c94:	a2 1b       	sub	r26, r18
     c96:	63 95       	inc	r22
     c98:	38 50       	subi	r19, 0x08	; 8
     c9a:	a9 f7       	brne	.-22     	; 0xc86 <__ultoa_common+0x14>
     c9c:	a0 5d       	subi	r26, 0xD0	; 208
     c9e:	aa 33       	cpi	r26, 0x3A	; 58
     ca0:	08 f0       	brcs	.+2      	; 0xca4 <__ultoa_common+0x32>
     ca2:	a9 5d       	subi	r26, 0xD9	; 217
     ca4:	a1 93       	st	Z+, r26
     ca6:	36 f7       	brtc	.-52     	; 0xc74 <__ultoa_common+0x2>
     ca8:	b1 11       	cpse	r27, r1
     caa:	b1 93       	st	Z+, r27
     cac:	10 82       	st	Z, r1
     cae:	ca 01       	movw	r24, r20
     cb0:	0c 94 8c 08 	jmp	0x1118	; 0x1118 <strrev>

00000cb4 <dtoa_prf>:
     cb4:	a9 e0       	ldi	r26, 0x09	; 9
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	e0 e6       	ldi	r30, 0x60	; 96
     cba:	f6 e0       	ldi	r31, 0x06	; 6
     cbc:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__prologue_saves__+0xc>
     cc0:	6a 01       	movw	r12, r20
     cc2:	12 2f       	mov	r17, r18
     cc4:	b0 2e       	mov	r11, r16
     cc6:	2b e3       	ldi	r18, 0x3B	; 59
     cc8:	20 17       	cp	r18, r16
     cca:	20 f0       	brcs	.+8      	; 0xcd4 <dtoa_prf+0x20>
     ccc:	ff 24       	eor	r15, r15
     cce:	f3 94       	inc	r15
     cd0:	f0 0e       	add	r15, r16
     cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <dtoa_prf+0x24>
     cd4:	2c e3       	ldi	r18, 0x3C	; 60
     cd6:	f2 2e       	mov	r15, r18
     cd8:	0f 2d       	mov	r16, r15
     cda:	27 e0       	ldi	r18, 0x07	; 7
     cdc:	ae 01       	movw	r20, r28
     cde:	4f 5f       	subi	r20, 0xFF	; 255
     ce0:	5f 4f       	sbci	r21, 0xFF	; 255
     ce2:	0e 94 b4 07 	call	0xf68	; 0xf68 <__ftoa_engine>
     ce6:	bc 01       	movw	r22, r24
     ce8:	49 81       	ldd	r20, Y+1	; 0x01
     cea:	84 2f       	mov	r24, r20
     cec:	89 70       	andi	r24, 0x09	; 9
     cee:	81 30       	cpi	r24, 0x01	; 1
     cf0:	31 f0       	breq	.+12     	; 0xcfe <dtoa_prf+0x4a>
     cf2:	e1 fc       	sbrc	r14, 1
     cf4:	06 c0       	rjmp	.+12     	; 0xd02 <dtoa_prf+0x4e>
     cf6:	e0 fe       	sbrs	r14, 0
     cf8:	06 c0       	rjmp	.+12     	; 0xd06 <dtoa_prf+0x52>
     cfa:	90 e2       	ldi	r25, 0x20	; 32
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <dtoa_prf+0x54>
     cfe:	9d e2       	ldi	r25, 0x2D	; 45
     d00:	03 c0       	rjmp	.+6      	; 0xd08 <dtoa_prf+0x54>
     d02:	9b e2       	ldi	r25, 0x2B	; 43
     d04:	01 c0       	rjmp	.+2      	; 0xd08 <dtoa_prf+0x54>
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	5e 2d       	mov	r21, r14
     d0a:	50 71       	andi	r21, 0x10	; 16
     d0c:	43 ff       	sbrs	r20, 3
     d0e:	3c c0       	rjmp	.+120    	; 0xd88 <dtoa_prf+0xd4>
     d10:	91 11       	cpse	r25, r1
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <dtoa_prf+0x64>
     d14:	83 e0       	ldi	r24, 0x03	; 3
     d16:	01 c0       	rjmp	.+2      	; 0xd1a <dtoa_prf+0x66>
     d18:	84 e0       	ldi	r24, 0x04	; 4
     d1a:	81 17       	cp	r24, r17
     d1c:	18 f4       	brcc	.+6      	; 0xd24 <dtoa_prf+0x70>
     d1e:	21 2f       	mov	r18, r17
     d20:	28 1b       	sub	r18, r24
     d22:	01 c0       	rjmp	.+2      	; 0xd26 <dtoa_prf+0x72>
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	51 11       	cpse	r21, r1
     d28:	0b c0       	rjmp	.+22     	; 0xd40 <dtoa_prf+0x8c>
     d2a:	f6 01       	movw	r30, r12
     d2c:	82 2f       	mov	r24, r18
     d2e:	30 e2       	ldi	r19, 0x20	; 32
     d30:	88 23       	and	r24, r24
     d32:	19 f0       	breq	.+6      	; 0xd3a <dtoa_prf+0x86>
     d34:	31 93       	st	Z+, r19
     d36:	81 50       	subi	r24, 0x01	; 1
     d38:	fb cf       	rjmp	.-10     	; 0xd30 <dtoa_prf+0x7c>
     d3a:	c2 0e       	add	r12, r18
     d3c:	d1 1c       	adc	r13, r1
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	99 23       	and	r25, r25
     d42:	29 f0       	breq	.+10     	; 0xd4e <dtoa_prf+0x9a>
     d44:	d6 01       	movw	r26, r12
     d46:	9c 93       	st	X, r25
     d48:	f6 01       	movw	r30, r12
     d4a:	31 96       	adiw	r30, 0x01	; 1
     d4c:	6f 01       	movw	r12, r30
     d4e:	c6 01       	movw	r24, r12
     d50:	03 96       	adiw	r24, 0x03	; 3
     d52:	e2 fe       	sbrs	r14, 2
     d54:	0a c0       	rjmp	.+20     	; 0xd6a <dtoa_prf+0xb6>
     d56:	3e e4       	ldi	r19, 0x4E	; 78
     d58:	d6 01       	movw	r26, r12
     d5a:	3c 93       	st	X, r19
     d5c:	41 e4       	ldi	r20, 0x41	; 65
     d5e:	11 96       	adiw	r26, 0x01	; 1
     d60:	4c 93       	st	X, r20
     d62:	11 97       	sbiw	r26, 0x01	; 1
     d64:	12 96       	adiw	r26, 0x02	; 2
     d66:	3c 93       	st	X, r19
     d68:	06 c0       	rjmp	.+12     	; 0xd76 <dtoa_prf+0xc2>
     d6a:	3e e6       	ldi	r19, 0x6E	; 110
     d6c:	f6 01       	movw	r30, r12
     d6e:	30 83       	st	Z, r19
     d70:	41 e6       	ldi	r20, 0x61	; 97
     d72:	41 83       	std	Z+1, r20	; 0x01
     d74:	32 83       	std	Z+2, r19	; 0x02
     d76:	fc 01       	movw	r30, r24
     d78:	32 2f       	mov	r19, r18
     d7a:	40 e2       	ldi	r20, 0x20	; 32
     d7c:	33 23       	and	r19, r19
     d7e:	09 f4       	brne	.+2      	; 0xd82 <dtoa_prf+0xce>
     d80:	42 c0       	rjmp	.+132    	; 0xe06 <dtoa_prf+0x152>
     d82:	41 93       	st	Z+, r20
     d84:	31 50       	subi	r19, 0x01	; 1
     d86:	fa cf       	rjmp	.-12     	; 0xd7c <dtoa_prf+0xc8>
     d88:	42 ff       	sbrs	r20, 2
     d8a:	44 c0       	rjmp	.+136    	; 0xe14 <dtoa_prf+0x160>
     d8c:	91 11       	cpse	r25, r1
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <dtoa_prf+0xe0>
     d90:	83 e0       	ldi	r24, 0x03	; 3
     d92:	01 c0       	rjmp	.+2      	; 0xd96 <dtoa_prf+0xe2>
     d94:	84 e0       	ldi	r24, 0x04	; 4
     d96:	81 17       	cp	r24, r17
     d98:	18 f4       	brcc	.+6      	; 0xda0 <dtoa_prf+0xec>
     d9a:	21 2f       	mov	r18, r17
     d9c:	28 1b       	sub	r18, r24
     d9e:	01 c0       	rjmp	.+2      	; 0xda2 <dtoa_prf+0xee>
     da0:	20 e0       	ldi	r18, 0x00	; 0
     da2:	51 11       	cpse	r21, r1
     da4:	0b c0       	rjmp	.+22     	; 0xdbc <dtoa_prf+0x108>
     da6:	f6 01       	movw	r30, r12
     da8:	82 2f       	mov	r24, r18
     daa:	30 e2       	ldi	r19, 0x20	; 32
     dac:	88 23       	and	r24, r24
     dae:	19 f0       	breq	.+6      	; 0xdb6 <dtoa_prf+0x102>
     db0:	31 93       	st	Z+, r19
     db2:	81 50       	subi	r24, 0x01	; 1
     db4:	fb cf       	rjmp	.-10     	; 0xdac <dtoa_prf+0xf8>
     db6:	c2 0e       	add	r12, r18
     db8:	d1 1c       	adc	r13, r1
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	99 23       	and	r25, r25
     dbe:	29 f0       	breq	.+10     	; 0xdca <dtoa_prf+0x116>
     dc0:	d6 01       	movw	r26, r12
     dc2:	9c 93       	st	X, r25
     dc4:	f6 01       	movw	r30, r12
     dc6:	31 96       	adiw	r30, 0x01	; 1
     dc8:	6f 01       	movw	r12, r30
     dca:	c6 01       	movw	r24, r12
     dcc:	03 96       	adiw	r24, 0x03	; 3
     dce:	e2 fe       	sbrs	r14, 2
     dd0:	0b c0       	rjmp	.+22     	; 0xde8 <dtoa_prf+0x134>
     dd2:	39 e4       	ldi	r19, 0x49	; 73
     dd4:	d6 01       	movw	r26, r12
     dd6:	3c 93       	st	X, r19
     dd8:	3e e4       	ldi	r19, 0x4E	; 78
     dda:	11 96       	adiw	r26, 0x01	; 1
     ddc:	3c 93       	st	X, r19
     dde:	11 97       	sbiw	r26, 0x01	; 1
     de0:	36 e4       	ldi	r19, 0x46	; 70
     de2:	12 96       	adiw	r26, 0x02	; 2
     de4:	3c 93       	st	X, r19
     de6:	07 c0       	rjmp	.+14     	; 0xdf6 <dtoa_prf+0x142>
     de8:	39 e6       	ldi	r19, 0x69	; 105
     dea:	f6 01       	movw	r30, r12
     dec:	30 83       	st	Z, r19
     dee:	3e e6       	ldi	r19, 0x6E	; 110
     df0:	31 83       	std	Z+1, r19	; 0x01
     df2:	36 e6       	ldi	r19, 0x66	; 102
     df4:	32 83       	std	Z+2, r19	; 0x02
     df6:	fc 01       	movw	r30, r24
     df8:	32 2f       	mov	r19, r18
     dfa:	40 e2       	ldi	r20, 0x20	; 32
     dfc:	33 23       	and	r19, r19
     dfe:	19 f0       	breq	.+6      	; 0xe06 <dtoa_prf+0x152>
     e00:	41 93       	st	Z+, r20
     e02:	31 50       	subi	r19, 0x01	; 1
     e04:	fb cf       	rjmp	.-10     	; 0xdfc <dtoa_prf+0x148>
     e06:	fc 01       	movw	r30, r24
     e08:	e2 0f       	add	r30, r18
     e0a:	f1 1d       	adc	r31, r1
     e0c:	10 82       	st	Z, r1
     e0e:	8e ef       	ldi	r24, 0xFE	; 254
     e10:	9f ef       	ldi	r25, 0xFF	; 255
     e12:	a6 c0       	rjmp	.+332    	; 0xf60 <dtoa_prf+0x2ac>
     e14:	21 e0       	ldi	r18, 0x01	; 1
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	91 11       	cpse	r25, r1
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <dtoa_prf+0x16c>
     e1c:	20 e0       	ldi	r18, 0x00	; 0
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	16 16       	cp	r1, r22
     e22:	17 06       	cpc	r1, r23
     e24:	1c f4       	brge	.+6      	; 0xe2c <dtoa_prf+0x178>
     e26:	fb 01       	movw	r30, r22
     e28:	31 96       	adiw	r30, 0x01	; 1
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <dtoa_prf+0x17c>
     e2c:	e1 e0       	ldi	r30, 0x01	; 1
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	2e 0f       	add	r18, r30
     e32:	3f 1f       	adc	r19, r31
     e34:	bb 20       	and	r11, r11
     e36:	21 f0       	breq	.+8      	; 0xe40 <dtoa_prf+0x18c>
     e38:	eb 2d       	mov	r30, r11
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	31 96       	adiw	r30, 0x01	; 1
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <dtoa_prf+0x190>
     e40:	e0 e0       	ldi	r30, 0x00	; 0
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	2e 0f       	add	r18, r30
     e46:	3f 1f       	adc	r19, r31
     e48:	e1 2f       	mov	r30, r17
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	2e 17       	cp	r18, r30
     e4e:	3f 07       	cpc	r19, r31
     e50:	1c f4       	brge	.+6      	; 0xe58 <dtoa_prf+0x1a4>
     e52:	12 1b       	sub	r17, r18
     e54:	21 2f       	mov	r18, r17
     e56:	01 c0       	rjmp	.+2      	; 0xe5a <dtoa_prf+0x1a6>
     e58:	20 e0       	ldi	r18, 0x00	; 0
     e5a:	8e 2d       	mov	r24, r14
     e5c:	88 71       	andi	r24, 0x18	; 24
     e5e:	59 f4       	brne	.+22     	; 0xe76 <dtoa_prf+0x1c2>
     e60:	f6 01       	movw	r30, r12
     e62:	82 2f       	mov	r24, r18
     e64:	30 e2       	ldi	r19, 0x20	; 32
     e66:	88 23       	and	r24, r24
     e68:	19 f0       	breq	.+6      	; 0xe70 <dtoa_prf+0x1bc>
     e6a:	31 93       	st	Z+, r19
     e6c:	81 50       	subi	r24, 0x01	; 1
     e6e:	fb cf       	rjmp	.-10     	; 0xe66 <dtoa_prf+0x1b2>
     e70:	c2 0e       	add	r12, r18
     e72:	d1 1c       	adc	r13, r1
     e74:	20 e0       	ldi	r18, 0x00	; 0
     e76:	99 23       	and	r25, r25
     e78:	29 f0       	breq	.+10     	; 0xe84 <dtoa_prf+0x1d0>
     e7a:	d6 01       	movw	r26, r12
     e7c:	9c 93       	st	X, r25
     e7e:	f6 01       	movw	r30, r12
     e80:	31 96       	adiw	r30, 0x01	; 1
     e82:	6f 01       	movw	r12, r30
     e84:	51 11       	cpse	r21, r1
     e86:	0b c0       	rjmp	.+22     	; 0xe9e <dtoa_prf+0x1ea>
     e88:	f6 01       	movw	r30, r12
     e8a:	82 2f       	mov	r24, r18
     e8c:	90 e3       	ldi	r25, 0x30	; 48
     e8e:	88 23       	and	r24, r24
     e90:	19 f0       	breq	.+6      	; 0xe98 <dtoa_prf+0x1e4>
     e92:	91 93       	st	Z+, r25
     e94:	81 50       	subi	r24, 0x01	; 1
     e96:	fb cf       	rjmp	.-10     	; 0xe8e <dtoa_prf+0x1da>
     e98:	c2 0e       	add	r12, r18
     e9a:	d1 1c       	adc	r13, r1
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	0f 2d       	mov	r16, r15
     ea0:	06 0f       	add	r16, r22
     ea2:	9a 81       	ldd	r25, Y+2	; 0x02
     ea4:	34 2f       	mov	r19, r20
     ea6:	30 71       	andi	r19, 0x10	; 16
     ea8:	44 ff       	sbrs	r20, 4
     eaa:	03 c0       	rjmp	.+6      	; 0xeb2 <dtoa_prf+0x1fe>
     eac:	91 33       	cpi	r25, 0x31	; 49
     eae:	09 f4       	brne	.+2      	; 0xeb2 <dtoa_prf+0x1fe>
     eb0:	01 50       	subi	r16, 0x01	; 1
     eb2:	10 16       	cp	r1, r16
     eb4:	24 f4       	brge	.+8      	; 0xebe <dtoa_prf+0x20a>
     eb6:	09 30       	cpi	r16, 0x09	; 9
     eb8:	18 f0       	brcs	.+6      	; 0xec0 <dtoa_prf+0x20c>
     eba:	08 e0       	ldi	r16, 0x08	; 8
     ebc:	01 c0       	rjmp	.+2      	; 0xec0 <dtoa_prf+0x20c>
     ebe:	01 e0       	ldi	r16, 0x01	; 1
     ec0:	ab 01       	movw	r20, r22
     ec2:	77 ff       	sbrs	r23, 7
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <dtoa_prf+0x216>
     ec6:	40 e0       	ldi	r20, 0x00	; 0
     ec8:	50 e0       	ldi	r21, 0x00	; 0
     eca:	fb 01       	movw	r30, r22
     ecc:	e4 1b       	sub	r30, r20
     ece:	f5 0b       	sbc	r31, r21
     ed0:	a1 e0       	ldi	r26, 0x01	; 1
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	ac 0f       	add	r26, r28
     ed6:	bd 1f       	adc	r27, r29
     ed8:	ea 0f       	add	r30, r26
     eda:	fb 1f       	adc	r31, r27
     edc:	8e e2       	ldi	r24, 0x2E	; 46
     ede:	a8 2e       	mov	r10, r24
     ee0:	4b 01       	movw	r8, r22
     ee2:	80 1a       	sub	r8, r16
     ee4:	91 08       	sbc	r9, r1
     ee6:	0b 2d       	mov	r16, r11
     ee8:	10 e0       	ldi	r17, 0x00	; 0
     eea:	11 95       	neg	r17
     eec:	01 95       	neg	r16
     eee:	11 09       	sbc	r17, r1
     ef0:	4f 3f       	cpi	r20, 0xFF	; 255
     ef2:	bf ef       	ldi	r27, 0xFF	; 255
     ef4:	5b 07       	cpc	r21, r27
     ef6:	21 f4       	brne	.+8      	; 0xf00 <dtoa_prf+0x24c>
     ef8:	d6 01       	movw	r26, r12
     efa:	ac 92       	st	X, r10
     efc:	11 96       	adiw	r26, 0x01	; 1
     efe:	6d 01       	movw	r12, r26
     f00:	64 17       	cp	r22, r20
     f02:	75 07       	cpc	r23, r21
     f04:	2c f0       	brlt	.+10     	; 0xf10 <dtoa_prf+0x25c>
     f06:	84 16       	cp	r8, r20
     f08:	95 06       	cpc	r9, r21
     f0a:	14 f4       	brge	.+4      	; 0xf10 <dtoa_prf+0x25c>
     f0c:	81 81       	ldd	r24, Z+1	; 0x01
     f0e:	01 c0       	rjmp	.+2      	; 0xf12 <dtoa_prf+0x25e>
     f10:	80 e3       	ldi	r24, 0x30	; 48
     f12:	41 50       	subi	r20, 0x01	; 1
     f14:	51 09       	sbc	r21, r1
     f16:	31 96       	adiw	r30, 0x01	; 1
     f18:	d6 01       	movw	r26, r12
     f1a:	11 96       	adiw	r26, 0x01	; 1
     f1c:	7d 01       	movw	r14, r26
     f1e:	40 17       	cp	r20, r16
     f20:	51 07       	cpc	r21, r17
     f22:	24 f0       	brlt	.+8      	; 0xf2c <dtoa_prf+0x278>
     f24:	d6 01       	movw	r26, r12
     f26:	8c 93       	st	X, r24
     f28:	67 01       	movw	r12, r14
     f2a:	e2 cf       	rjmp	.-60     	; 0xef0 <dtoa_prf+0x23c>
     f2c:	64 17       	cp	r22, r20
     f2e:	75 07       	cpc	r23, r21
     f30:	39 f4       	brne	.+14     	; 0xf40 <dtoa_prf+0x28c>
     f32:	96 33       	cpi	r25, 0x36	; 54
     f34:	20 f4       	brcc	.+8      	; 0xf3e <dtoa_prf+0x28a>
     f36:	95 33       	cpi	r25, 0x35	; 53
     f38:	19 f4       	brne	.+6      	; 0xf40 <dtoa_prf+0x28c>
     f3a:	31 11       	cpse	r19, r1
     f3c:	01 c0       	rjmp	.+2      	; 0xf40 <dtoa_prf+0x28c>
     f3e:	81 e3       	ldi	r24, 0x31	; 49
     f40:	f6 01       	movw	r30, r12
     f42:	80 83       	st	Z, r24
     f44:	f7 01       	movw	r30, r14
     f46:	82 2f       	mov	r24, r18
     f48:	90 e2       	ldi	r25, 0x20	; 32
     f4a:	88 23       	and	r24, r24
     f4c:	19 f0       	breq	.+6      	; 0xf54 <dtoa_prf+0x2a0>
     f4e:	91 93       	st	Z+, r25
     f50:	81 50       	subi	r24, 0x01	; 1
     f52:	fb cf       	rjmp	.-10     	; 0xf4a <dtoa_prf+0x296>
     f54:	f7 01       	movw	r30, r14
     f56:	e2 0f       	add	r30, r18
     f58:	f1 1d       	adc	r31, r1
     f5a:	10 82       	st	Z, r1
     f5c:	80 e0       	ldi	r24, 0x00	; 0
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	29 96       	adiw	r28, 0x09	; 9
     f62:	ec e0       	ldi	r30, 0x0C	; 12
     f64:	0c 94 be 08 	jmp	0x117c	; 0x117c <__epilogue_restores__+0xc>

00000f68 <__ftoa_engine>:
     f68:	28 30       	cpi	r18, 0x08	; 8
     f6a:	08 f0       	brcs	.+2      	; 0xf6e <__ftoa_engine+0x6>
     f6c:	27 e0       	ldi	r18, 0x07	; 7
     f6e:	33 27       	eor	r19, r19
     f70:	da 01       	movw	r26, r20
     f72:	99 0f       	add	r25, r25
     f74:	31 1d       	adc	r19, r1
     f76:	87 fd       	sbrc	r24, 7
     f78:	91 60       	ori	r25, 0x01	; 1
     f7a:	00 96       	adiw	r24, 0x00	; 0
     f7c:	61 05       	cpc	r22, r1
     f7e:	71 05       	cpc	r23, r1
     f80:	39 f4       	brne	.+14     	; 0xf90 <__ftoa_engine+0x28>
     f82:	32 60       	ori	r19, 0x02	; 2
     f84:	2e 5f       	subi	r18, 0xFE	; 254
     f86:	3d 93       	st	X+, r19
     f88:	30 e3       	ldi	r19, 0x30	; 48
     f8a:	2a 95       	dec	r18
     f8c:	e1 f7       	brne	.-8      	; 0xf86 <__ftoa_engine+0x1e>
     f8e:	08 95       	ret
     f90:	9f 3f       	cpi	r25, 0xFF	; 255
     f92:	30 f0       	brcs	.+12     	; 0xfa0 <__ftoa_engine+0x38>
     f94:	80 38       	cpi	r24, 0x80	; 128
     f96:	71 05       	cpc	r23, r1
     f98:	61 05       	cpc	r22, r1
     f9a:	09 f0       	breq	.+2      	; 0xf9e <__ftoa_engine+0x36>
     f9c:	3c 5f       	subi	r19, 0xFC	; 252
     f9e:	3c 5f       	subi	r19, 0xFC	; 252
     fa0:	3d 93       	st	X+, r19
     fa2:	91 30       	cpi	r25, 0x01	; 1
     fa4:	08 f0       	brcs	.+2      	; 0xfa8 <__ftoa_engine+0x40>
     fa6:	80 68       	ori	r24, 0x80	; 128
     fa8:	91 1d       	adc	r25, r1
     faa:	df 93       	push	r29
     fac:	cf 93       	push	r28
     fae:	1f 93       	push	r17
     fb0:	0f 93       	push	r16
     fb2:	ff 92       	push	r15
     fb4:	ef 92       	push	r14
     fb6:	19 2f       	mov	r17, r25
     fb8:	98 7f       	andi	r25, 0xF8	; 248
     fba:	96 95       	lsr	r25
     fbc:	e9 2f       	mov	r30, r25
     fbe:	96 95       	lsr	r25
     fc0:	96 95       	lsr	r25
     fc2:	e9 0f       	add	r30, r25
     fc4:	ff 27       	eor	r31, r31
     fc6:	ee 53       	subi	r30, 0x3E	; 62
     fc8:	ff 4f       	sbci	r31, 0xFF	; 255
     fca:	99 27       	eor	r25, r25
     fcc:	33 27       	eor	r19, r19
     fce:	ee 24       	eor	r14, r14
     fd0:	ff 24       	eor	r15, r15
     fd2:	a7 01       	movw	r20, r14
     fd4:	e7 01       	movw	r28, r14
     fd6:	05 90       	lpm	r0, Z+
     fd8:	08 94       	sec
     fda:	07 94       	ror	r0
     fdc:	28 f4       	brcc	.+10     	; 0xfe8 <__ftoa_engine+0x80>
     fde:	36 0f       	add	r19, r22
     fe0:	e7 1e       	adc	r14, r23
     fe2:	f8 1e       	adc	r15, r24
     fe4:	49 1f       	adc	r20, r25
     fe6:	51 1d       	adc	r21, r1
     fe8:	66 0f       	add	r22, r22
     fea:	77 1f       	adc	r23, r23
     fec:	88 1f       	adc	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	06 94       	lsr	r0
     ff2:	a1 f7       	brne	.-24     	; 0xfdc <__ftoa_engine+0x74>
     ff4:	05 90       	lpm	r0, Z+
     ff6:	07 94       	ror	r0
     ff8:	28 f4       	brcc	.+10     	; 0x1004 <__ftoa_engine+0x9c>
     ffa:	e7 0e       	add	r14, r23
     ffc:	f8 1e       	adc	r15, r24
     ffe:	49 1f       	adc	r20, r25
    1000:	56 1f       	adc	r21, r22
    1002:	c1 1d       	adc	r28, r1
    1004:	77 0f       	add	r23, r23
    1006:	88 1f       	adc	r24, r24
    1008:	99 1f       	adc	r25, r25
    100a:	66 1f       	adc	r22, r22
    100c:	06 94       	lsr	r0
    100e:	a1 f7       	brne	.-24     	; 0xff8 <__ftoa_engine+0x90>
    1010:	05 90       	lpm	r0, Z+
    1012:	07 94       	ror	r0
    1014:	28 f4       	brcc	.+10     	; 0x1020 <__ftoa_engine+0xb8>
    1016:	f8 0e       	add	r15, r24
    1018:	49 1f       	adc	r20, r25
    101a:	56 1f       	adc	r21, r22
    101c:	c7 1f       	adc	r28, r23
    101e:	d1 1d       	adc	r29, r1
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	66 1f       	adc	r22, r22
    1026:	77 1f       	adc	r23, r23
    1028:	06 94       	lsr	r0
    102a:	a1 f7       	brne	.-24     	; 0x1014 <__ftoa_engine+0xac>
    102c:	05 90       	lpm	r0, Z+
    102e:	07 94       	ror	r0
    1030:	20 f4       	brcc	.+8      	; 0x103a <__ftoa_engine+0xd2>
    1032:	49 0f       	add	r20, r25
    1034:	56 1f       	adc	r21, r22
    1036:	c7 1f       	adc	r28, r23
    1038:	d8 1f       	adc	r29, r24
    103a:	99 0f       	add	r25, r25
    103c:	66 1f       	adc	r22, r22
    103e:	77 1f       	adc	r23, r23
    1040:	88 1f       	adc	r24, r24
    1042:	06 94       	lsr	r0
    1044:	a9 f7       	brne	.-22     	; 0x1030 <__ftoa_engine+0xc8>
    1046:	84 91       	lpm	r24, Z
    1048:	10 95       	com	r17
    104a:	17 70       	andi	r17, 0x07	; 7
    104c:	41 f0       	breq	.+16     	; 0x105e <__ftoa_engine+0xf6>
    104e:	d6 95       	lsr	r29
    1050:	c7 95       	ror	r28
    1052:	57 95       	ror	r21
    1054:	47 95       	ror	r20
    1056:	f7 94       	ror	r15
    1058:	e7 94       	ror	r14
    105a:	1a 95       	dec	r17
    105c:	c1 f7       	brne	.-16     	; 0x104e <__ftoa_engine+0xe6>
    105e:	e8 e6       	ldi	r30, 0x68	; 104
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	68 94       	set
    1064:	15 90       	lpm	r1, Z+
    1066:	15 91       	lpm	r17, Z+
    1068:	35 91       	lpm	r19, Z+
    106a:	65 91       	lpm	r22, Z+
    106c:	95 91       	lpm	r25, Z+
    106e:	05 90       	lpm	r0, Z+
    1070:	7f e2       	ldi	r23, 0x2F	; 47
    1072:	73 95       	inc	r23
    1074:	e1 18       	sub	r14, r1
    1076:	f1 0a       	sbc	r15, r17
    1078:	43 0b       	sbc	r20, r19
    107a:	56 0b       	sbc	r21, r22
    107c:	c9 0b       	sbc	r28, r25
    107e:	d0 09       	sbc	r29, r0
    1080:	c0 f7       	brcc	.-16     	; 0x1072 <__ftoa_engine+0x10a>
    1082:	e1 0c       	add	r14, r1
    1084:	f1 1e       	adc	r15, r17
    1086:	43 1f       	adc	r20, r19
    1088:	56 1f       	adc	r21, r22
    108a:	c9 1f       	adc	r28, r25
    108c:	d0 1d       	adc	r29, r0
    108e:	7e f4       	brtc	.+30     	; 0x10ae <__ftoa_engine+0x146>
    1090:	70 33       	cpi	r23, 0x30	; 48
    1092:	11 f4       	brne	.+4      	; 0x1098 <__ftoa_engine+0x130>
    1094:	8a 95       	dec	r24
    1096:	e6 cf       	rjmp	.-52     	; 0x1064 <__ftoa_engine+0xfc>
    1098:	e8 94       	clt
    109a:	01 50       	subi	r16, 0x01	; 1
    109c:	30 f0       	brcs	.+12     	; 0x10aa <__ftoa_engine+0x142>
    109e:	08 0f       	add	r16, r24
    10a0:	0a f4       	brpl	.+2      	; 0x10a4 <__ftoa_engine+0x13c>
    10a2:	00 27       	eor	r16, r16
    10a4:	02 17       	cp	r16, r18
    10a6:	08 f4       	brcc	.+2      	; 0x10aa <__ftoa_engine+0x142>
    10a8:	20 2f       	mov	r18, r16
    10aa:	23 95       	inc	r18
    10ac:	02 2f       	mov	r16, r18
    10ae:	7a 33       	cpi	r23, 0x3A	; 58
    10b0:	28 f0       	brcs	.+10     	; 0x10bc <__ftoa_engine+0x154>
    10b2:	79 e3       	ldi	r23, 0x39	; 57
    10b4:	7d 93       	st	X+, r23
    10b6:	2a 95       	dec	r18
    10b8:	e9 f7       	brne	.-6      	; 0x10b4 <__ftoa_engine+0x14c>
    10ba:	10 c0       	rjmp	.+32     	; 0x10dc <__ftoa_engine+0x174>
    10bc:	7d 93       	st	X+, r23
    10be:	2a 95       	dec	r18
    10c0:	89 f6       	brne	.-94     	; 0x1064 <__ftoa_engine+0xfc>
    10c2:	06 94       	lsr	r0
    10c4:	97 95       	ror	r25
    10c6:	67 95       	ror	r22
    10c8:	37 95       	ror	r19
    10ca:	17 95       	ror	r17
    10cc:	17 94       	ror	r1
    10ce:	e1 18       	sub	r14, r1
    10d0:	f1 0a       	sbc	r15, r17
    10d2:	43 0b       	sbc	r20, r19
    10d4:	56 0b       	sbc	r21, r22
    10d6:	c9 0b       	sbc	r28, r25
    10d8:	d0 09       	sbc	r29, r0
    10da:	98 f0       	brcs	.+38     	; 0x1102 <__ftoa_engine+0x19a>
    10dc:	23 95       	inc	r18
    10de:	7e 91       	ld	r23, -X
    10e0:	73 95       	inc	r23
    10e2:	7a 33       	cpi	r23, 0x3A	; 58
    10e4:	08 f0       	brcs	.+2      	; 0x10e8 <__ftoa_engine+0x180>
    10e6:	70 e3       	ldi	r23, 0x30	; 48
    10e8:	7c 93       	st	X, r23
    10ea:	20 13       	cpse	r18, r16
    10ec:	b8 f7       	brcc	.-18     	; 0x10dc <__ftoa_engine+0x174>
    10ee:	7e 91       	ld	r23, -X
    10f0:	70 61       	ori	r23, 0x10	; 16
    10f2:	7d 93       	st	X+, r23
    10f4:	30 f0       	brcs	.+12     	; 0x1102 <__ftoa_engine+0x19a>
    10f6:	83 95       	inc	r24
    10f8:	71 e3       	ldi	r23, 0x31	; 49
    10fa:	7d 93       	st	X+, r23
    10fc:	70 e3       	ldi	r23, 0x30	; 48
    10fe:	2a 95       	dec	r18
    1100:	e1 f7       	brne	.-8      	; 0x10fa <__ftoa_engine+0x192>
    1102:	11 24       	eor	r1, r1
    1104:	ef 90       	pop	r14
    1106:	ff 90       	pop	r15
    1108:	0f 91       	pop	r16
    110a:	1f 91       	pop	r17
    110c:	cf 91       	pop	r28
    110e:	df 91       	pop	r29
    1110:	99 27       	eor	r25, r25
    1112:	87 fd       	sbrc	r24, 7
    1114:	90 95       	com	r25
    1116:	08 95       	ret

00001118 <strrev>:
    1118:	dc 01       	movw	r26, r24
    111a:	fc 01       	movw	r30, r24
    111c:	67 2f       	mov	r22, r23
    111e:	71 91       	ld	r23, Z+
    1120:	77 23       	and	r23, r23
    1122:	e1 f7       	brne	.-8      	; 0x111c <strrev+0x4>
    1124:	32 97       	sbiw	r30, 0x02	; 2
    1126:	04 c0       	rjmp	.+8      	; 0x1130 <strrev+0x18>
    1128:	7c 91       	ld	r23, X
    112a:	6d 93       	st	X+, r22
    112c:	70 83       	st	Z, r23
    112e:	62 91       	ld	r22, -Z
    1130:	ae 17       	cp	r26, r30
    1132:	bf 07       	cpc	r27, r31
    1134:	c8 f3       	brcs	.-14     	; 0x1128 <strrev+0x10>
    1136:	08 95       	ret

00001138 <__prologue_saves__>:
    1138:	2f 92       	push	r2
    113a:	3f 92       	push	r3
    113c:	4f 92       	push	r4
    113e:	5f 92       	push	r5
    1140:	6f 92       	push	r6
    1142:	7f 92       	push	r7
    1144:	8f 92       	push	r8
    1146:	9f 92       	push	r9
    1148:	af 92       	push	r10
    114a:	bf 92       	push	r11
    114c:	cf 92       	push	r12
    114e:	df 92       	push	r13
    1150:	ef 92       	push	r14
    1152:	ff 92       	push	r15
    1154:	0f 93       	push	r16
    1156:	1f 93       	push	r17
    1158:	cf 93       	push	r28
    115a:	df 93       	push	r29
    115c:	cd b7       	in	r28, 0x3d	; 61
    115e:	de b7       	in	r29, 0x3e	; 62
    1160:	ca 1b       	sub	r28, r26
    1162:	db 0b       	sbc	r29, r27
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	f8 94       	cli
    1168:	de bf       	out	0x3e, r29	; 62
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	cd bf       	out	0x3d, r28	; 61
    116e:	09 94       	ijmp

00001170 <__epilogue_restores__>:
    1170:	2a 88       	ldd	r2, Y+18	; 0x12
    1172:	39 88       	ldd	r3, Y+17	; 0x11
    1174:	48 88       	ldd	r4, Y+16	; 0x10
    1176:	5f 84       	ldd	r5, Y+15	; 0x0f
    1178:	6e 84       	ldd	r6, Y+14	; 0x0e
    117a:	7d 84       	ldd	r7, Y+13	; 0x0d
    117c:	8c 84       	ldd	r8, Y+12	; 0x0c
    117e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1180:	aa 84       	ldd	r10, Y+10	; 0x0a
    1182:	b9 84       	ldd	r11, Y+9	; 0x09
    1184:	c8 84       	ldd	r12, Y+8	; 0x08
    1186:	df 80       	ldd	r13, Y+7	; 0x07
    1188:	ee 80       	ldd	r14, Y+6	; 0x06
    118a:	fd 80       	ldd	r15, Y+5	; 0x05
    118c:	0c 81       	ldd	r16, Y+4	; 0x04
    118e:	1b 81       	ldd	r17, Y+3	; 0x03
    1190:	aa 81       	ldd	r26, Y+2	; 0x02
    1192:	b9 81       	ldd	r27, Y+1	; 0x01
    1194:	ce 0f       	add	r28, r30
    1196:	d1 1d       	adc	r29, r1
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	f8 94       	cli
    119c:	de bf       	out	0x3e, r29	; 62
    119e:	0f be       	out	0x3f, r0	; 63
    11a0:	cd bf       	out	0x3d, r28	; 61
    11a2:	ed 01       	movw	r28, r26
    11a4:	08 95       	ret

000011a6 <_exit>:
    11a6:	f8 94       	cli

000011a8 <__stop_program>:
    11a8:	ff cf       	rjmp	.-2      	; 0x11a8 <__stop_program>
